// DO NOT EDIT
// Generated by JFlex 1.8.2 http://jflex.de/
// source: lexer.flex

package com.l2ashdz.appcliente.analizadores.lexico;

import com.l2ashdz.appcliente.model.Token;
import com.l2ashdz.appcliente.model.errores.ErrorAnalisis;
import com.l2ashdz.appcliente.model.errores.TipoError;

import java.util.ArrayList;
import java.util.List;

import java_cup.runtime.Symbol;

import static com.l2ashdz.appcliente.analizadores.sintactico.sym.*;


// See https://github.com/jflex-de/jflex/issues/222
@SuppressWarnings("FallThrough")
public class Lexer implements java_cup.runtime.Scanner {

  /** This character denotes the end of file. */
  public static final int YYEOF = -1;

  /** Initial size of the lookahead buffer. */
  private static final int ZZ_BUFFERSIZE = 16384;

  // Lexical states.
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = {
     0, 0
  };

  /**
   * Top-level table for translating characters to character classes
   */
  private static final int [] ZZ_CMAP_TOP = zzUnpackcmap_top();

  private static final String ZZ_CMAP_TOP_PACKED_0 =
    "\1\0\1\u0100\1\u0200\1\u0300\1\u0400\1\u0500\1\u0600\1\u0700"+
    "\1\u0800\1\u0900\1\u0a00\1\u0b00\1\u0c00\1\u0d00\1\u0e00\1\u0f00"+
    "\1\u1000\1\u0100\1\u1100\1\u1200\1\u1300\1\u0100\1\u1400\1\u1500"+
    "\1\u1600\1\u1700\1\u1800\1\u1900\1\u1a00\1\u1b00\1\u0100\1\u1c00"+
    "\1\u1d00\1\u1e00\2\u1f00\1\u2000\7\u1f00\1\u2100\1\u2200\1\u2300"+
    "\1\u1f00\1\u2400\1\u2500\2\u1f00\31\u0100\1\u2600\121\u0100\1\u2700"+
    "\4\u0100\1\u2800\1\u0100\1\u2900\1\u2a00\1\u2b00\1\u2c00\1\u2d00"+
    "\1\u2e00\53\u0100\1\u2f00\41\u1f00\1\u0100\1\u3000\1\u3100\1\u0100"+
    "\1\u3200\1\u3300\1\u3400\1\u3500\1\u3600\1\u3700\1\u3800\1\u3900"+
    "\1\u3a00\1\u0100\1\u3b00\1\u3c00\1\u3d00\1\u3e00\1\u3f00\1\u4000"+
    "\1\u4100\1\u1f00\1\u4200\1\u4300\1\u4400\1\u4500\1\u4600\1\u4700"+
    "\1\u4800\1\u4900\1\u4a00\1\u4b00\1\u4c00\1\u4d00\1\u1f00\1\u4e00"+
    "\1\u4f00\1\u5000\1\u1f00\3\u0100\1\u5100\1\u5200\1\u5300\12\u1f00"+
    "\4\u0100\1\u5400\17\u1f00\2\u0100\1\u5500\41\u1f00\2\u0100\1\u5600"+
    "\1\u5700\2\u1f00\1\u5800\1\u5900\27\u0100\1\u5a00\2\u0100\1\u5b00"+
    "\45\u1f00\1\u0100\1\u5c00\1\u5d00\11\u1f00\1\u5e00\24\u1f00\1\u5f00"+
    "\1\u6000\1\u1f00\1\u6100\1\u6200\1\u6300\1\u6400\2\u1f00\1\u6500"+
    "\5\u1f00\1\u6600\1\u6700\1\u6800\5\u1f00\1\u6900\1\u6a00\4\u1f00"+
    "\1\u6b00\2\u1f00\1\u6c00\16\u1f00\246\u0100\1\u6d00\20\u0100\1\u6e00"+
    "\1\u6f00\25\u0100\1\u7000\34\u0100\1\u7100\14\u1f00\2\u0100\1\u7200"+
    "\u0b06\u1f00\1\u2700\u02fe\u1f00";

  private static int [] zzUnpackcmap_top() {
    int [] result = new int[4352];
    int offset = 0;
    offset = zzUnpackcmap_top(ZZ_CMAP_TOP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackcmap_top(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /**
   * Second-level tables for translating characters to character classes
   */
  private static final int [] ZZ_CMAP_BLOCKS = zzUnpackcmap_blocks();

  private static final String ZZ_CMAP_BLOCKS_PACKED_0 =
    "\11\0\1\1\1\2\1\0\1\1\1\3\22\0\1\4"+
    "\1\5\1\6\1\0\1\7\2\0\1\10\4\0\1\11"+
    "\1\12\2\0\1\13\1\14\1\15\1\16\6\17\1\20"+
    "\1\0\1\21\1\0\1\22\2\0\1\23\1\24\1\25"+
    "\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35"+
    "\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45"+
    "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55"+
    "\1\0\1\56\1\0\1\57\1\0\1\60\1\53\1\61"+
    "\1\62\1\63\1\64\1\53\1\65\1\66\1\53\1\67"+
    "\1\70\1\53\1\71\1\72\2\53\1\73\1\74\1\75"+
    "\1\76\1\53\1\77\3\53\1\100\1\0\1\101\54\0"+
    "\1\53\12\0\1\53\4\0\1\53\5\0\27\53\1\0"+
    "\37\53\1\0\u01ca\53\4\0\14\53\16\0\5\53\7\0"+
    "\1\53\1\0\1\53\21\0\165\53\1\0\2\53\2\0"+
    "\4\53\1\0\1\53\6\0\1\53\1\0\3\53\1\0"+
    "\1\53\1\0\24\53\1\0\123\53\1\0\213\53\1\0"+
    "\255\53\1\0\46\53\2\0\1\53\6\0\51\53\10\0"+
    "\55\53\1\0\1\53\1\0\2\53\1\0\2\53\1\0"+
    "\1\53\10\0\33\53\4\0\4\53\35\0\13\53\5\0"+
    "\100\53\12\102\4\0\146\53\1\0\10\53\2\0\12\53"+
    "\1\0\6\53\12\102\3\53\2\0\1\53\20\0\73\53"+
    "\2\0\145\53\16\0\12\102\54\53\4\0\1\53\2\0"+
    "\1\53\2\0\56\53\22\0\34\53\4\0\13\53\65\0"+
    "\25\53\1\0\10\53\25\0\17\53\1\0\201\53\2\0"+
    "\12\102\1\0\23\53\1\0\10\53\2\0\2\53\2\0"+
    "\26\53\1\0\7\53\1\0\1\53\3\0\4\53\2\0"+
    "\11\53\2\0\2\53\2\0\4\53\10\0\1\53\4\0"+
    "\2\53\1\0\5\53\2\0\12\102\2\53\12\0\1\53"+
    "\1\0\1\53\2\0\3\53\1\0\6\53\4\0\2\53"+
    "\2\0\26\53\1\0\7\53\1\0\2\53\1\0\2\53"+
    "\1\0\2\53\2\0\1\53\1\0\5\53\4\0\2\53"+
    "\2\0\3\53\3\0\1\53\7\0\4\53\1\0\1\53"+
    "\7\0\12\102\6\53\13\0\3\53\1\0\11\53\1\0"+
    "\3\53\1\0\26\53\1\0\7\53\1\0\2\53\1\0"+
    "\5\53\2\0\12\53\1\0\3\53\1\0\3\53\2\0"+
    "\1\53\17\0\4\53\2\0\12\102\11\0\7\53\1\0"+
    "\3\53\1\0\10\53\2\0\2\53\2\0\26\53\1\0"+
    "\7\53\1\0\2\53\1\0\5\53\2\0\11\53\2\0"+
    "\2\53\2\0\3\53\10\0\2\53\4\0\2\53\1\0"+
    "\5\53\2\0\12\102\1\0\1\53\20\0\2\53\1\0"+
    "\6\53\3\0\3\53\1\0\4\53\3\0\2\53\1\0"+
    "\1\53\1\0\2\53\3\0\2\53\3\0\3\53\3\0"+
    "\14\53\4\0\5\53\3\0\3\53\1\0\4\53\2\0"+
    "\1\53\6\0\1\53\16\0\12\102\20\0\15\53\1\0"+
    "\3\53\1\0\27\53\1\0\20\53\3\0\10\53\1\0"+
    "\3\53\1\0\4\53\7\0\2\53\1\0\3\53\5\0"+
    "\4\53\2\0\12\102\20\0\4\53\1\0\10\53\1\0"+
    "\3\53\1\0\27\53\1\0\12\53\1\0\5\53\2\0"+
    "\11\53\1\0\3\53\1\0\4\53\7\0\2\53\7\0"+
    "\1\53\1\0\4\53\2\0\12\102\1\0\2\53\15\0"+
    "\4\53\1\0\10\53\1\0\3\53\1\0\63\53\1\0"+
    "\3\53\1\0\5\53\5\0\4\53\7\0\5\53\2\0"+
    "\12\102\12\0\6\53\2\0\2\53\1\0\22\53\3\0"+
    "\30\53\1\0\11\53\1\0\1\53\2\0\7\53\3\0"+
    "\1\53\4\0\6\53\1\0\1\53\1\0\10\53\6\0"+
    "\12\102\2\0\2\53\15\0\72\53\5\0\17\53\1\0"+
    "\12\102\47\0\2\53\1\0\1\53\1\0\5\53\1\0"+
    "\30\53\1\0\1\53\1\0\27\53\2\0\5\53\1\0"+
    "\1\53\1\0\6\53\2\0\12\102\2\0\4\53\40\0"+
    "\1\53\27\0\2\53\6\0\12\102\13\0\1\53\1\0"+
    "\1\53\1\0\1\53\4\0\12\53\1\0\44\53\4\0"+
    "\24\53\1\0\22\53\1\0\44\53\11\0\1\53\71\0"+
    "\100\53\12\102\6\0\100\53\12\102\4\53\2\0\46\53"+
    "\1\0\1\53\5\0\1\53\2\0\53\53\1\0\115\53"+
    "\1\0\4\53\2\0\7\53\1\0\1\53\1\0\4\53"+
    "\2\0\51\53\1\0\4\53\2\0\41\53\1\0\4\53"+
    "\2\0\7\53\1\0\1\53\1\0\4\53\2\0\17\53"+
    "\1\0\71\53\1\0\4\53\2\0\103\53\2\0\3\53"+
    "\40\0\20\53\20\0\126\53\2\0\6\53\3\0\u016c\53"+
    "\2\0\21\53\1\0\32\53\5\0\113\53\3\0\13\53"+
    "\7\0\15\53\1\0\7\53\13\0\25\53\13\0\24\53"+
    "\14\0\15\53\1\0\3\53\1\0\2\53\14\0\124\53"+
    "\3\0\1\53\4\0\2\53\2\0\12\102\41\0\3\53"+
    "\2\0\12\102\6\0\131\53\7\0\53\53\5\0\106\53"+
    "\12\0\37\53\1\0\14\53\4\0\14\53\12\0\12\102"+
    "\36\53\2\0\5\53\13\0\54\53\4\0\32\53\6\0"+
    "\12\102\46\0\34\53\4\0\77\53\1\0\35\53\2\0"+
    "\1\53\12\102\6\0\12\102\15\0\1\53\10\0\17\53"+
    "\101\0\114\53\4\0\12\102\21\0\11\53\14\0\60\53"+
    "\12\102\72\53\14\0\70\53\10\0\12\102\3\0\3\53"+
    "\12\102\44\53\2\0\11\53\7\0\53\53\2\0\3\53"+
    "\20\0\3\53\1\0\47\53\5\0\372\53\1\0\33\53"+
    "\2\0\6\53\2\0\46\53\2\0\6\53\2\0\10\53"+
    "\1\0\1\53\1\0\1\53\1\0\1\53\1\0\37\53"+
    "\2\0\65\53\1\0\7\53\1\0\1\53\3\0\3\53"+
    "\1\0\7\53\3\0\4\53\2\0\6\53\4\0\15\53"+
    "\5\0\3\53\1\0\7\53\102\0\2\53\23\0\1\53"+
    "\34\0\1\53\15\0\1\53\20\0\15\53\63\0\41\53"+
    "\21\0\1\53\4\0\1\53\2\0\12\53\1\0\1\53"+
    "\3\0\5\53\6\0\1\53\1\0\1\53\1\0\1\53"+
    "\1\0\4\53\1\0\13\53\2\0\4\53\5\0\5\53"+
    "\4\0\1\53\21\0\51\53\u022d\0\64\53\26\0\57\53"+
    "\1\0\57\53\1\0\205\53\6\0\11\53\14\0\46\53"+
    "\1\0\1\53\5\0\1\53\2\0\70\53\7\0\1\53"+
    "\17\0\30\53\11\0\7\53\1\0\7\53\1\0\7\53"+
    "\1\0\7\53\1\0\7\53\1\0\7\53\1\0\7\53"+
    "\1\0\7\53\1\0\40\53\57\0\1\53\325\0\3\53"+
    "\31\0\17\53\1\0\5\53\2\0\5\53\4\0\126\53"+
    "\2\0\2\53\2\0\3\53\1\0\132\53\1\0\4\53"+
    "\5\0\53\53\1\0\136\53\21\0\33\53\65\0\306\53"+
    "\112\0\360\53\20\0\215\53\103\0\56\53\2\0\15\53"+
    "\3\0\20\53\12\102\2\53\24\0\63\53\1\0\12\53"+
    "\1\0\163\53\45\0\11\53\2\0\147\53\2\0\65\53"+
    "\2\0\5\53\60\0\61\53\30\0\64\53\14\0\106\53"+
    "\12\0\12\102\6\0\30\53\3\0\1\53\1\0\3\53"+
    "\12\102\44\53\2\0\44\53\14\0\35\53\3\0\101\53"+
    "\16\0\1\53\12\102\6\0\20\53\12\102\5\53\1\0"+
    "\67\53\11\0\16\53\2\0\12\102\6\0\27\53\3\0"+
    "\111\53\30\0\3\53\2\0\20\53\2\0\5\53\12\0"+
    "\6\53\2\0\6\53\2\0\6\53\11\0\7\53\1\0"+
    "\7\53\1\0\53\53\1\0\14\53\10\0\173\53\1\0"+
    "\2\53\2\0\12\102\6\0\244\53\14\0\27\53\4\0"+
    "\61\53\4\0\156\53\2\0\152\53\46\0\7\53\14\0"+
    "\5\53\5\0\14\53\1\0\15\53\1\0\5\53\1\0"+
    "\1\53\1\0\2\53\1\0\2\53\1\0\154\53\41\0"+
    "\153\53\22\0\100\53\2\0\66\53\50\0\14\53\4\0"+
    "\20\53\20\0\20\53\3\0\2\53\30\0\3\53\40\0"+
    "\5\53\1\0\207\53\23\0\12\102\7\0\32\53\4\0"+
    "\1\53\1\0\32\53\13\0\131\53\3\0\6\53\2\0"+
    "\6\53\2\0\6\53\2\0\3\53\43\0\14\53\1\0"+
    "\32\53\1\0\23\53\1\0\2\53\1\0\17\53\2\0"+
    "\16\53\42\0\173\53\105\0\65\53\210\0\1\53\202\0"+
    "\35\53\3\0\61\53\17\0\1\53\37\0\40\53\15\0"+
    "\36\53\5\0\53\53\5\0\36\53\2\0\44\53\4\0"+
    "\10\53\1\0\5\53\52\0\236\53\2\0\12\102\6\0"+
    "\44\53\4\0\44\53\4\0\50\53\10\0\64\53\234\0"+
    "\67\53\11\0\26\53\12\0\10\53\230\0\6\53\2\0"+
    "\1\53\1\0\54\53\1\0\2\53\3\0\1\53\2\0"+
    "\27\53\12\0\27\53\11\0\37\53\101\0\23\53\1\0"+
    "\2\53\12\0\26\53\12\0\32\53\106\0\70\53\6\0"+
    "\2\53\100\0\4\53\1\0\2\53\5\0\10\53\1\0"+
    "\3\53\1\0\35\53\2\0\3\53\4\0\1\53\40\0"+
    "\35\53\3\0\35\53\43\0\10\53\1\0\36\53\31\0"+
    "\66\53\12\0\26\53\12\0\23\53\15\0\22\53\156\0"+
    "\111\53\67\0\63\53\15\0\63\53\15\0\50\53\10\0"+
    "\12\102\306\0\35\53\12\0\1\53\10\0\41\53\217\0"+
    "\27\53\11\0\107\53\37\0\12\102\17\0\74\53\25\0"+
    "\31\53\7\0\12\102\6\0\65\53\1\0\12\102\4\0"+
    "\3\53\11\0\44\53\2\0\1\53\11\0\105\53\4\0"+
    "\4\53\3\0\12\102\1\53\1\0\1\53\43\0\22\53"+
    "\1\0\45\53\6\0\1\53\101\0\7\53\1\0\1\53"+
    "\1\0\4\53\1\0\17\53\1\0\12\53\7\0\73\53"+
    "\5\0\12\102\6\0\4\53\1\0\10\53\2\0\2\53"+
    "\2\0\26\53\1\0\7\53\1\0\2\53\1\0\5\53"+
    "\1\0\12\53\2\0\2\53\2\0\3\53\2\0\1\53"+
    "\6\0\1\53\5\0\7\53\2\0\7\53\3\0\5\53"+
    "\213\0\113\53\5\0\12\102\4\0\2\53\40\0\106\53"+
    "\1\0\1\53\10\0\12\102\246\0\66\53\2\0\11\53"+
    "\27\0\6\53\42\0\101\53\3\0\1\53\13\0\12\102"+
    "\46\0\71\53\7\0\12\102\66\0\33\53\2\0\17\53"+
    "\4\0\12\102\306\0\73\53\145\0\100\53\12\102\25\0"+
    "\1\53\240\0\10\53\2\0\56\53\2\0\10\53\1\0"+
    "\2\53\33\0\77\53\10\0\1\53\10\0\112\53\3\0"+
    "\1\53\42\0\71\53\7\0\11\53\1\0\55\53\1\0"+
    "\11\53\17\0\12\102\30\0\36\53\2\0\26\53\1\0"+
    "\16\53\111\0\7\53\1\0\2\53\1\0\54\53\3\0"+
    "\1\53\1\0\2\53\1\0\11\53\10\0\12\102\6\0"+
    "\6\53\1\0\2\53\1\0\45\53\1\0\2\53\1\0"+
    "\6\53\7\0\12\102\u0136\0\27\53\11\0\232\53\146\0"+
    "\157\53\21\0\304\53\274\0\57\53\321\0\107\53\271\0"+
    "\71\53\7\0\37\53\1\0\12\102\146\0\36\53\2\0"+
    "\5\53\13\0\67\53\11\0\4\53\14\0\12\102\11\0"+
    "\25\53\5\0\23\53\260\0\100\53\200\0\113\53\4\0"+
    "\71\53\7\0\21\53\100\0\2\53\1\0\1\53\34\0"+
    "\370\53\10\0\363\53\15\0\37\53\61\0\3\53\21\0"+
    "\4\53\10\0\u018c\53\4\0\153\53\5\0\15\53\3\0"+
    "\11\53\7\0\12\53\3\0\2\53\306\0\5\53\3\0"+
    "\6\53\10\0\10\53\2\0\7\53\36\0\4\53\224\0"+
    "\3\53\273\0\125\53\1\0\107\53\1\0\2\53\2\0"+
    "\1\53\2\0\2\53\2\0\4\53\1\0\14\53\1\0"+
    "\1\53\1\0\7\53\1\0\101\53\1\0\4\53\2\0"+
    "\10\53\1\0\7\53\1\0\34\53\1\0\4\53\1\0"+
    "\5\53\1\0\1\53\3\0\7\53\1\0\u0154\53\2\0"+
    "\31\53\1\0\31\53\1\0\37\53\1\0\31\53\1\0"+
    "\37\53\1\0\31\53\1\0\37\53\1\0\31\53\1\0"+
    "\37\53\1\0\31\53\1\0\10\53\2\0\62\102\67\53"+
    "\4\0\62\53\10\0\1\53\16\0\1\53\26\0\5\53"+
    "\1\0\17\53\120\0\7\53\1\0\21\53\2\0\7\53"+
    "\1\0\2\53\1\0\5\53\325\0\55\53\3\0\16\53"+
    "\2\0\12\102\4\0\1\53\u0171\0\60\53\12\102\6\0"+
    "\305\53\13\0\7\53\51\0\114\53\4\0\12\102\246\0"+
    "\4\53\1\0\33\53\1\0\2\53\1\0\1\53\2\0"+
    "\1\53\1\0\12\53\1\0\4\53\1\0\1\53\1\0"+
    "\1\53\6\0\1\53\4\0\1\53\1\0\1\53\1\0"+
    "\1\53\1\0\3\53\1\0\2\53\1\0\1\53\2\0"+
    "\1\53\1\0\1\53\1\0\1\53\1\0\1\53\1\0"+
    "\1\53\1\0\2\53\1\0\1\53\2\0\4\53\1\0"+
    "\7\53\1\0\4\53\1\0\4\53\1\0\1\53\1\0"+
    "\12\53\1\0\21\53\5\0\3\53\1\0\5\53\1\0"+
    "\21\53\164\0\32\53\6\0\32\53\6\0\32\53\166\0"+
    "\327\53\51\0\65\53\13\0\336\53\2\0\u0182\53\16\0"+
    "\u0131\53\37\0\36\53\342\0";

  private static int [] zzUnpackcmap_blocks() {
    int [] result = new int[29440];
    int offset = 0;
    offset = zzUnpackcmap_blocks(ZZ_CMAP_BLOCKS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackcmap_blocks(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /**
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\2\2\1\3\1\1\1\4\1\5\1\6"+
    "\1\7\1\10\1\11\2\1\1\12\1\13\3\0\1\14"+
    "\27\0\1\15\22\0\1\16\132\0\1\17\136\0\1\20"+
    "\66\0\1\21\23\0\1\22\57\0\1\23\3\0\1\24"+
    "\1\0\1\25\6\0\1\26\14\0\1\27\4\0\1\30"+
    "\44\0\1\31\12\0\1\32\1\33\6\0\1\34\10\0"+
    "\1\35\52\0\1\36\3\0\1\37\17\0\1\40\34\0"+
    "\1\41\4\0\1\42\1\43\15\0\1\44\1\0\1\45"+
    "\52\0\1\46\7\0\1\47\36\0\1\50\1\51\10\0"+
    "\1\52\1\53\44\0\1\54\24\0\1\55\1\56\41\0"+
    "\1\57\37\0\1\60\6\0\1\61\7\0\1\62\2\0"+
    "\1\63\1\64\1\65\25\0\1\66\5\0\1\67\36\0"+
    "\1\70\22\0\1\71\4\0\1\72\2\0\1\73\21\0"+
    "\1\74\13\0\1\75\3\0\1\76\14\0\1\77\1\100"+
    "\11\0\1\101\1\102\1\103\4\0\1\104\1\105";

  private static int [] zzUnpackAction() {
    int [] result = new int[972];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /**
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\103\0\103\0\206\0\103\0\311\0\103\0\103"+
    "\0\103\0\103\0\103\0\103\0\u010c\0\u014f\0\103\0\103"+
    "\0\u0192\0\u01d5\0\u0218\0\103\0\u025b\0\u029e\0\u02e1\0\u0324"+
    "\0\u0367\0\u03aa\0\u03ed\0\u0430\0\u0473\0\u04b6\0\u04f9\0\u053c"+
    "\0\u057f\0\u05c2\0\u0605\0\u0648\0\u068b\0\u06ce\0\u0711\0\u0754"+
    "\0\u0797\0\u07da\0\u081d\0\103\0\u0860\0\u08a3\0\u08e6\0\u0929"+
    "\0\u096c\0\u09af\0\u09f2\0\u0a35\0\u0a78\0\u0abb\0\u0afe\0\u0b41"+
    "\0\u0b84\0\u0bc7\0\u0c0a\0\u0c4d\0\u0c90\0\u0cd3\0\103\0\u0d16"+
    "\0\u0d59\0\u0d9c\0\u0ddf\0\u0e22\0\u0e65\0\u0ea8\0\u0eeb\0\u0f2e"+
    "\0\u0f71\0\u0fb4\0\u0ff7\0\u103a\0\u107d\0\u10c0\0\u1103\0\u1146"+
    "\0\u1189\0\u11cc\0\u120f\0\u1252\0\u1295\0\u12d8\0\u131b\0\u135e"+
    "\0\u13a1\0\u13e4\0\u1427\0\u146a\0\u14ad\0\u14f0\0\u1533\0\u1576"+
    "\0\u15b9\0\u15fc\0\u163f\0\u1682\0\u16c5\0\u1708\0\u174b\0\u178e"+
    "\0\u17d1\0\u1814\0\u1857\0\u189a\0\u18dd\0\u1920\0\u1963\0\u19a6"+
    "\0\u19e9\0\u1a2c\0\u1a6f\0\u1ab2\0\u1af5\0\u1b38\0\u1b7b\0\u1bbe"+
    "\0\u1c01\0\u1c44\0\u1c87\0\u1cca\0\u1d0d\0\u1d50\0\u1d93\0\u1dd6"+
    "\0\u1e19\0\u1e5c\0\u1e9f\0\u1ee2\0\u1f25\0\u1f68\0\u1fab\0\u1fee"+
    "\0\u2031\0\u2074\0\u20b7\0\u20fa\0\u213d\0\u2180\0\u21c3\0\u2206"+
    "\0\u2249\0\u228c\0\u22cf\0\u2312\0\u2355\0\u2398\0\u23db\0\u241e"+
    "\0\u2461\0\103\0\u24a4\0\u24e7\0\u252a\0\u256d\0\u25b0\0\u25f3"+
    "\0\u2636\0\u2679\0\u26bc\0\u26ff\0\u2742\0\u2785\0\u27c8\0\u280b"+
    "\0\u284e\0\u2891\0\u28d4\0\u2917\0\u295a\0\u299d\0\u29e0\0\u2a23"+
    "\0\u2a66\0\u2aa9\0\u2aec\0\u2b2f\0\u2b72\0\u2bb5\0\u2bf8\0\u2c3b"+
    "\0\u2c7e\0\u2cc1\0\u2d04\0\u2d47\0\u2d8a\0\u2dcd\0\u2e10\0\u2e53"+
    "\0\u2e96\0\u2ed9\0\u2f1c\0\u2f5f\0\u2fa2\0\u2fe5\0\u3028\0\u306b"+
    "\0\u30ae\0\u30f1\0\u3134\0\u3177\0\u31ba\0\u31fd\0\u3240\0\u3283"+
    "\0\u32c6\0\u3309\0\u334c\0\u338f\0\u33d2\0\u3415\0\u3458\0\u349b"+
    "\0\u34de\0\u3521\0\u3564\0\u35a7\0\u35ea\0\u362d\0\u3670\0\u36b3"+
    "\0\u36f6\0\u3739\0\u377c\0\u37bf\0\u3802\0\u3845\0\u3888\0\u38cb"+
    "\0\u390e\0\u3951\0\u3994\0\u39d7\0\u3a1a\0\u3a5d\0\u3aa0\0\u3ae3"+
    "\0\u3b26\0\u3b69\0\u3bac\0\u3bef\0\u3c32\0\u3c75\0\u3cb8\0\u3cfb"+
    "\0\103\0\u3d3e\0\u3d81\0\u3dc4\0\u3e07\0\u3e4a\0\u3e8d\0\u3ed0"+
    "\0\u3f13\0\u3f56\0\u3f99\0\u3fdc\0\u401f\0\u4062\0\u40a5\0\u40e8"+
    "\0\u412b\0\u416e\0\u41b1\0\u41f4\0\u4237\0\u427a\0\u42bd\0\u4300"+
    "\0\u4343\0\u4386\0\u43c9\0\u440c\0\u444f\0\u4492\0\u44d5\0\u4518"+
    "\0\u455b\0\u459e\0\u45e1\0\u4624\0\u4667\0\u46aa\0\u46ed\0\u4730"+
    "\0\u4773\0\u47b6\0\u47f9\0\u483c\0\u487f\0\u48c2\0\u4905\0\u4948"+
    "\0\u498b\0\u49ce\0\u4a11\0\u4a54\0\u4a97\0\u4ada\0\u4b1d\0\103"+
    "\0\u4b60\0\u4ba3\0\u4be6\0\u4c29\0\u4c6c\0\u4caf\0\u4cf2\0\u4d35"+
    "\0\u4d78\0\u4dbb\0\u4dfe\0\u4e41\0\u4e84\0\u4ec7\0\u4f0a\0\u4f4d"+
    "\0\u4f90\0\u4fd3\0\u5016\0\103\0\u5059\0\u509c\0\u50df\0\u5122"+
    "\0\u5165\0\u51a8\0\u51eb\0\u522e\0\u5271\0\u52b4\0\u52f7\0\u533a"+
    "\0\u537d\0\u53c0\0\u5403\0\u5446\0\u5489\0\u54cc\0\u550f\0\u5552"+
    "\0\u5595\0\u55d8\0\u561b\0\u565e\0\u56a1\0\u56e4\0\u5727\0\u576a"+
    "\0\u57ad\0\u57f0\0\u5833\0\u5876\0\u58b9\0\u58fc\0\u593f\0\u5982"+
    "\0\u59c5\0\u5a08\0\u5a4b\0\u5a8e\0\u5ad1\0\u5b14\0\u5b57\0\u5b9a"+
    "\0\u5bdd\0\u5c20\0\u5c63\0\103\0\u5ca6\0\u5ce9\0\u5d2c\0\103"+
    "\0\u5d6f\0\103\0\u5db2\0\u5df5\0\u5e38\0\u5e7b\0\u5ebe\0\u5f01"+
    "\0\103\0\u5f44\0\u5f87\0\u5fca\0\u600d\0\u6050\0\u6093\0\u60d6"+
    "\0\u6119\0\u615c\0\u619f\0\u61e2\0\u6225\0\103\0\u6268\0\u62ab"+
    "\0\u62ee\0\u6331\0\103\0\u6374\0\u63b7\0\u63fa\0\u643d\0\u6480"+
    "\0\u64c3\0\u6506\0\u6549\0\u658c\0\u65cf\0\u6612\0\u6655\0\u6698"+
    "\0\u66db\0\u671e\0\u6761\0\u67a4\0\u67e7\0\u682a\0\u686d\0\u68b0"+
    "\0\u68f3\0\u6936\0\u6979\0\u69bc\0\u69ff\0\u6a42\0\u6a85\0\u6ac8"+
    "\0\u6b0b\0\u6b4e\0\u6b91\0\u6bd4\0\u6c17\0\u6c5a\0\u6c9d\0\103"+
    "\0\u6ce0\0\u6d23\0\u6d66\0\u6da9\0\u6dec\0\u6e2f\0\u6e72\0\u6eb5"+
    "\0\u6ef8\0\u6f3b\0\103\0\103\0\u6f7e\0\u6fc1\0\u7004\0\u7047"+
    "\0\u708a\0\u70cd\0\103\0\u7110\0\u7153\0\u7196\0\u71d9\0\u721c"+
    "\0\u725f\0\u72a2\0\u72e5\0\103\0\u7328\0\u736b\0\u73ae\0\u73f1"+
    "\0\u7434\0\u7477\0\u74ba\0\u74fd\0\u7540\0\u7583\0\u75c6\0\u7609"+
    "\0\u764c\0\u768f\0\u76d2\0\u7715\0\u7758\0\u779b\0\u77de\0\u7821"+
    "\0\u7864\0\u78a7\0\u78ea\0\u792d\0\u7970\0\u79b3\0\u79f6\0\u7a39"+
    "\0\u7a7c\0\u7abf\0\u7b02\0\u7b45\0\u7b88\0\u7bcb\0\u7c0e\0\u7c51"+
    "\0\u7c94\0\u7cd7\0\u7d1a\0\u7d5d\0\u7da0\0\u7de3\0\103\0\u7e26"+
    "\0\u7e69\0\u7eac\0\103\0\u7eef\0\u7f32\0\u7f75\0\u7fb8\0\u7ffb"+
    "\0\u803e\0\u8081\0\u80c4\0\u8107\0\u814a\0\u818d\0\u81d0\0\u8213"+
    "\0\u8256\0\u8299\0\103\0\u82dc\0\u831f\0\u8362\0\u83a5\0\u83e8"+
    "\0\u842b\0\u846e\0\u84b1\0\u84f4\0\u8537\0\u857a\0\u85bd\0\u8600"+
    "\0\u8643\0\u8686\0\u86c9\0\u870c\0\u874f\0\u8792\0\u87d5\0\u8818"+
    "\0\u885b\0\u889e\0\u88e1\0\u8924\0\u8967\0\u89aa\0\u89ed\0\103"+
    "\0\u8a30\0\u8a73\0\u8ab6\0\u8af9\0\103\0\103\0\u8b3c\0\u8b7f"+
    "\0\u8bc2\0\u8c05\0\u8c48\0\u8c8b\0\u8cce\0\u8d11\0\u8d54\0\u8d97"+
    "\0\u8dda\0\u8e1d\0\u8e60\0\103\0\u8ea3\0\103\0\u8ee6\0\u8f29"+
    "\0\u8f6c\0\u8faf\0\u8ff2\0\u9035\0\u9078\0\u90bb\0\u90fe\0\u9141"+
    "\0\u9184\0\u91c7\0\u920a\0\u924d\0\u9290\0\u92d3\0\u9316\0\u9359"+
    "\0\u939c\0\u93df\0\u9422\0\u9465\0\u94a8\0\u94eb\0\u952e\0\u9571"+
    "\0\u95b4\0\u95f7\0\u963a\0\u967d\0\u96c0\0\u9703\0\u9746\0\u9789"+
    "\0\u97cc\0\u980f\0\u9852\0\u9895\0\u98d8\0\u991b\0\u995e\0\u99a1"+
    "\0\103\0\u99e4\0\u9a27\0\u9a6a\0\u9aad\0\u9af0\0\u9b33\0\u9b76"+
    "\0\103\0\u9bb9\0\u9bfc\0\u9c3f\0\u9c82\0\u9cc5\0\u9d08\0\u9d4b"+
    "\0\u9d8e\0\u9dd1\0\u9e14\0\u9e57\0\u9e9a\0\u9edd\0\u9f20\0\u9f63"+
    "\0\u9fa6\0\u9fe9\0\ua02c\0\ua06f\0\ua0b2\0\ua0f5\0\ua138\0\ua17b"+
    "\0\ua1be\0\ua201\0\ua244\0\ua287\0\ua2ca\0\ua30d\0\ua350\0\103"+
    "\0\103\0\ua393\0\ua3d6\0\ua419\0\ua45c\0\ua49f\0\ua4e2\0\ua525"+
    "\0\ua568\0\103\0\103\0\ua5ab\0\ua5ee\0\ua631\0\ua674\0\ua6b7"+
    "\0\ua6fa\0\ua73d\0\ua780\0\ua7c3\0\ua806\0\ua849\0\ua88c\0\ua8cf"+
    "\0\ua912\0\ua955\0\ua998\0\ua9db\0\uaa1e\0\uaa61\0\uaaa4\0\uaae7"+
    "\0\uab2a\0\uab6d\0\uabb0\0\uabf3\0\uac36\0\uac79\0\uacbc\0\uacff"+
    "\0\uad42\0\uad85\0\uadc8\0\uae0b\0\uae4e\0\uae91\0\uaed4\0\103"+
    "\0\uaf17\0\uaf5a\0\uaf9d\0\uafe0\0\ub023\0\ub066\0\ub0a9\0\ub0ec"+
    "\0\ub12f\0\ub172\0\ub1b5\0\ub1f8\0\ub23b\0\ub27e\0\ub2c1\0\ub304"+
    "\0\ub347\0\ub38a\0\ub3cd\0\ub410\0\ub453\0\ub496\0\ub4d9\0\ub51c"+
    "\0\ub55f\0\ub5a2\0\ub5e5\0\ub628\0\ub66b\0\ub6ae\0\ub6f1\0\ub734"+
    "\0\ub777\0\ub7ba\0\ub7fd\0\ub840\0\ub883\0\ub8c6\0\ub909\0\ub94c"+
    "\0\ub98f\0\ub9d2\0\uba15\0\uba58\0\uba9b\0\ubade\0\ubb21\0\ubb64"+
    "\0\ubba7\0\ubbea\0\ubc2d\0\ubc70\0\ubcb3\0\ubcf6\0\ubd39\0\103"+
    "\0\ubd7c\0\ubdbf\0\ube02\0\ube45\0\ube88\0\ubecb\0\ubf0e\0\ubf51"+
    "\0\ubf94\0\ubfd7\0\uc01a\0\uc05d\0\uc0a0\0\uc0e3\0\uc126\0\uc169"+
    "\0\uc1ac\0\uc1ef\0\uc232\0\uc275\0\uc2b8\0\uc2fb\0\uc33e\0\uc381"+
    "\0\uc3c4\0\uc407\0\uc44a\0\uc48d\0\uc4d0\0\uc513\0\uc556\0\103"+
    "\0\uc599\0\uc5dc\0\uc61f\0\uc662\0\uc6a5\0\uc6e8\0\103\0\uc72b"+
    "\0\uc76e\0\uc7b1\0\uc7f4\0\uc837\0\uc87a\0\uc8bd\0\103\0\uc900"+
    "\0\uc943\0\103\0\103\0\103\0\uc986\0\uc9c9\0\uca0c\0\uca4f"+
    "\0\uca92\0\ucad5\0\ucb18\0\ucb5b\0\ucb9e\0\ucbe1\0\ucc24\0\ucc67"+
    "\0\uccaa\0\ucced\0\ucd30\0\ucd73\0\ucdb6\0\ucdf9\0\uce3c\0\uce7f"+
    "\0\ucec2\0\103\0\ucf05\0\ucf48\0\ucf8b\0\ucfce\0\ud011\0\103"+
    "\0\ud054\0\ud097\0\ud0da\0\ud11d\0\ud160\0\ud1a3\0\ud1e6\0\ud229"+
    "\0\ud26c\0\ud2af\0\ud2f2\0\ud335\0\ud378\0\ud3bb\0\ud3fe\0\ud441"+
    "\0\ud484\0\ud4c7\0\ud50a\0\ud54d\0\ud590\0\ud5d3\0\ud616\0\ud659"+
    "\0\ud69c\0\ud6df\0\ud722\0\ud765\0\ud7a8\0\ud7eb\0\103\0\ud82e"+
    "\0\ud871\0\ud8b4\0\ud8f7\0\ud93a\0\ud97d\0\ud9c0\0\uda03\0\uda46"+
    "\0\uda89\0\udacc\0\udb0f\0\udb52\0\udb95\0\udbd8\0\udc1b\0\udc5e"+
    "\0\udca1\0\103\0\udce4\0\udd27\0\udd6a\0\uddad\0\103\0\uddf0"+
    "\0\ude33\0\103\0\ude76\0\udeb9\0\udefc\0\udf3f\0\udf82\0\udfc5"+
    "\0\ue008\0\ue04b\0\ue08e\0\ue0d1\0\ue114\0\ue157\0\ue19a\0\ue1dd"+
    "\0\ue220\0\ue263\0\ue2a6\0\103\0\ue2e9\0\ue32c\0\ue36f\0\ue3b2"+
    "\0\ue3f5\0\ue438\0\ue47b\0\ue4be\0\ue501\0\ue544\0\ue587\0\103"+
    "\0\ue5ca\0\ue60d\0\ue650\0\103\0\ue693\0\ue6d6\0\ue719\0\ue75c"+
    "\0\ue79f\0\ue7e2\0\ue825\0\ue868\0\ue8ab\0\ue8ee\0\ue931\0\ue974"+
    "\0\103\0\103\0\ue9b7\0\ue9fa\0\uea3d\0\uea80\0\ueac3\0\ueb06"+
    "\0\ueb49\0\ueb8c\0\uebcf\0\103\0\103\0\103\0\uec12\0\uec55"+
    "\0\uec98\0\uecdb\0\103\0\103";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[972];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /**
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\2\3\1\4\1\3\1\5\1\6\2\2\1\7"+
    "\6\2\1\10\1\11\1\12\32\2\1\13\1\14\5\2"+
    "\1\15\1\2\1\16\11\2\1\17\1\20\1\2\105\0"+
    "\1\3\100\0\1\21\3\22\1\23\1\21\1\24\1\25"+
    "\1\26\1\21\1\25\5\27\3\21\1\30\1\31\1\32"+
    "\1\33\1\34\1\35\2\21\1\36\1\37\1\21\1\40"+
    "\1\41\1\42\1\43\1\44\1\21\1\45\1\21\1\46"+
    "\1\47\1\21\1\50\5\21\1\25\2\21\1\51\14\21"+
    "\1\50\2\21\1\27\66\0\1\52\105\0\1\53\11\0"+
    "\4\21\1\26\1\21\1\24\1\21\1\26\73\21\3\22"+
    "\1\23\1\21\1\24\1\21\1\26\12\21\1\30\1\31"+
    "\1\32\1\33\1\34\1\35\2\21\1\36\1\37\1\21"+
    "\1\40\1\41\1\42\1\43\1\44\1\21\1\45\1\21"+
    "\1\46\1\47\1\21\1\50\10\21\1\51\14\21\1\50"+
    "\3\21\1\26\4\23\1\26\1\54\14\26\1\55\1\56"+
    "\1\57\1\60\1\61\1\62\2\26\1\63\1\64\1\26"+
    "\1\65\1\66\1\67\1\70\1\71\1\26\1\72\1\26"+
    "\1\73\1\74\1\26\1\75\10\26\1\76\14\26\1\75"+
    "\3\26\4\21\1\26\1\21\1\77\1\25\1\26\1\21"+
    "\6\25\3\21\32\25\2\21\21\25\2\21\1\25\6\26"+
    "\1\54\74\26\4\21\1\26\1\21\1\24\1\21\1\26"+
    "\2\21\5\100\62\21\1\100\4\21\1\26\1\21\1\24"+
    "\1\21\1\26\20\21\1\101\4\21\1\102\5\21\1\103"+
    "\42\21\1\26\1\21\1\24\1\21\1\26\30\21\1\104"+
    "\45\21\1\26\1\21\1\24\1\21\1\26\12\21\1\105"+
    "\3\21\1\106\2\21\1\107\3\21\1\110\2\21\1\111"+
    "\2\21\1\112\42\21\1\26\1\21\1\24\1\21\1\26"+
    "\12\21\1\113\3\21\1\114\30\21\1\113\26\21\1\26"+
    "\1\21\1\24\1\21\1\26\25\21\1\115\50\21\1\26"+
    "\1\21\1\24\1\21\1\26\16\21\1\116\3\21\1\117"+
    "\5\21\1\120\45\21\1\26\1\21\1\24\1\21\1\26"+
    "\15\21\1\121\10\21\1\122\1\123\13\21\1\124\32\21"+
    "\1\26\1\21\1\24\1\21\1\26\36\21\1\125\37\21"+
    "\1\26\1\21\1\24\1\21\1\26\30\21\1\126\45\21"+
    "\1\26\1\21\1\24\1\21\1\26\30\21\1\127\45\21"+
    "\1\26\1\21\1\24\1\21\1\26\30\21\1\130\5\21"+
    "\1\131\37\21\1\26\1\21\1\24\1\21\1\26\31\21"+
    "\1\132\44\21\1\26\1\21\1\24\1\21\1\26\12\21"+
    "\1\133\63\21\1\26\1\21\1\24\1\21\1\26\12\21"+
    "\1\134\3\21\1\135\57\21\1\26\1\21\1\24\1\21"+
    "\1\26\16\21\1\136\3\21\1\137\53\21\1\26\1\21"+
    "\1\24\1\21\1\26\33\21\1\140\1\141\41\21\1\26"+
    "\1\21\1\24\1\21\1\26\21\21\1\142\32\21\1\142"+
    "\21\21\1\26\1\21\1\24\1\21\1\26\12\21\1\113"+
    "\34\21\1\113\22\21\71\0\1\143\77\0\1\144\14\0"+
    "\6\26\1\54\22\26\1\145\4\26\1\146\5\26\1\147"+
    "\44\26\1\54\32\26\1\150\47\26\1\54\14\26\1\151"+
    "\3\26\1\152\2\26\1\153\3\26\1\154\2\26\1\155"+
    "\2\26\1\156\44\26\1\54\14\26\1\157\3\26\1\160"+
    "\30\26\1\157\30\26\1\54\27\26\1\161\52\26\1\54"+
    "\20\26\1\162\3\26\1\163\5\26\1\164\47\26\1\54"+
    "\17\26\1\165\10\26\1\166\1\167\13\26\1\170\34\26"+
    "\1\54\40\26\1\171\41\26\1\54\32\26\1\172\47\26"+
    "\1\54\32\26\1\173\47\26\1\54\32\26\1\174\5\26"+
    "\1\175\41\26\1\54\33\26\1\176\46\26\1\54\14\26"+
    "\1\177\65\26\1\54\14\26\1\200\3\26\1\201\61\26"+
    "\1\54\20\26\1\202\3\26\1\203\55\26\1\54\35\26"+
    "\1\204\1\205\43\26\1\54\23\26\1\206\32\26\1\206"+
    "\23\26\1\54\14\26\1\157\34\26\1\157\22\26\4\21"+
    "\1\26\1\21\1\24\1\21\1\26\2\21\5\207\62\21"+
    "\1\207\4\21\1\26\1\21\1\24\1\21\1\26\33\21"+
    "\1\210\42\21\1\26\1\21\1\24\1\21\1\26\22\21"+
    "\1\211\53\21\1\26\1\21\1\24\1\21\1\26\16\21"+
    "\1\212\57\21\1\26\1\21\1\24\1\21\1\26\35\21"+
    "\1\213\40\21\1\26\1\21\1\24\1\21\1\26\26\21"+
    "\1\214\47\21\1\26\1\21\1\24\1\21\1\26\27\21"+
    "\1\215\46\21\1\26\1\21\1\24\1\21\1\26\16\21"+
    "\1\216\57\21\1\26\1\21\1\24\1\21\1\26\12\21"+
    "\1\217\63\21\1\26\1\21\1\24\1\21\1\26\25\21"+
    "\1\220\1\221\47\21\1\26\1\21\1\24\1\21\1\26"+
    "\16\21\1\222\57\21\1\26\1\21\1\24\1\21\1\26"+
    "\33\21\1\223\26\21\1\223\13\21\1\26\1\21\1\24"+
    "\1\21\1\26\33\21\1\224\42\21\1\26\1\21\1\24"+
    "\1\21\1\26\22\21\1\225\53\21\1\26\1\21\1\24"+
    "\1\21\1\26\14\21\1\226\61\21\1\26\1\21\1\24"+
    "\1\21\1\26\14\21\1\227\10\21\1\230\50\21\1\26"+
    "\1\21\1\24\1\21\1\26\33\21\1\231\37\21\3\121"+
    "\1\165\1\21\1\232\1\21\1\26\76\21\1\26\1\21"+
    "\1\24\1\21\1\26\12\21\1\233\63\21\1\26\1\21"+
    "\1\24\1\21\1\26\15\21\1\234\60\21\1\26\1\21"+
    "\1\24\1\21\1\26\32\21\1\235\43\21\1\26\1\21"+
    "\1\24\1\21\1\26\34\21\1\236\41\21\1\26\1\21"+
    "\1\24\1\21\1\26\20\21\1\237\55\21\1\26\1\21"+
    "\1\24\1\21\1\26\15\21\1\240\60\21\1\26\1\21"+
    "\1\24\1\21\1\26\26\21\1\241\47\21\1\26\1\21"+
    "\1\24\1\21\1\26\16\21\1\242\57\21\1\26\1\21"+
    "\1\24\1\21\1\26\14\21\1\243\61\21\1\26\1\21"+
    "\1\24\1\21\1\26\33\21\1\244\1\245\41\21\1\26"+
    "\1\21\1\24\1\21\1\26\15\21\1\246\60\21\1\26"+
    "\1\21\1\24\1\21\1\26\32\21\1\247\43\21\1\26"+
    "\1\21\1\24\1\21\1\26\26\21\1\250\12\21\1\251"+
    "\34\21\1\26\1\21\1\24\1\21\1\26\35\21\1\252"+
    "\40\21\1\26\1\21\1\24\1\21\1\26\25\21\1\253"+
    "\50\21\1\26\1\21\1\24\1\21\1\26\36\21\1\254"+
    "\37\21\1\26\1\21\1\24\1\21\1\26\22\21\1\255"+
    "\32\21\1\255\14\21\57\0\1\256\102\0\1\257\23\0"+
    "\6\26\1\54\35\26\1\260\44\26\1\54\24\26\1\261"+
    "\55\26\1\54\20\26\1\262\61\26\1\54\37\26\1\263"+
    "\42\26\1\54\30\26\1\264\51\26\1\54\31\26\1\265"+
    "\50\26\1\54\20\26\1\266\61\26\1\54\14\26\1\267"+
    "\65\26\1\54\27\26\1\270\1\271\51\26\1\54\20\26"+
    "\1\272\61\26\1\54\35\26\1\273\26\26\1\273\15\26"+
    "\1\54\35\26\1\274\44\26\1\54\24\26\1\275\55\26"+
    "\1\54\16\26\1\276\63\26\1\54\16\26\1\277\10\26"+
    "\1\300\52\26\1\54\35\26\1\301\37\26\4\165\1\26"+
    "\1\232\102\26\1\54\14\26\1\302\65\26\1\54\17\26"+
    "\1\303\62\26\1\54\34\26\1\304\45\26\1\54\36\26"+
    "\1\305\43\26\1\54\22\26\1\306\57\26\1\54\17\26"+
    "\1\307\62\26\1\54\30\26\1\310\51\26\1\54\20\26"+
    "\1\311\61\26\1\54\16\26\1\312\63\26\1\54\35\26"+
    "\1\313\1\314\43\26\1\54\17\26\1\315\62\26\1\54"+
    "\34\26\1\316\45\26\1\54\30\26\1\317\12\26\1\320"+
    "\36\26\1\54\37\26\1\321\42\26\1\54\27\26\1\322"+
    "\52\26\1\54\40\26\1\323\41\26\1\54\24\26\1\324"+
    "\32\26\1\324\14\26\4\21\1\26\1\21\1\24\1\21"+
    "\1\26\2\21\5\325\62\21\1\325\4\21\1\26\1\21"+
    "\1\24\1\21\1\26\16\21\1\326\57\21\1\26\1\21"+
    "\1\24\1\21\1\26\27\21\1\327\46\21\1\26\1\21"+
    "\1\24\1\21\1\26\12\21\1\330\63\21\1\26\1\21"+
    "\1\24\1\21\1\26\30\21\1\331\45\21\1\26\1\21"+
    "\1\24\1\21\1\26\31\21\1\332\44\21\1\26\1\21"+
    "\1\24\1\21\1\26\35\21\1\333\40\21\1\26\1\21"+
    "\1\24\1\21\1\26\14\21\1\334\61\21\1\26\1\21"+
    "\1\24\1\21\1\26\34\21\1\335\41\21\1\26\1\21"+
    "\1\24\1\21\1\26\36\21\1\336\37\21\1\26\1\21"+
    "\1\24\1\21\1\26\13\21\1\337\62\21\1\26\1\21"+
    "\1\24\1\21\1\26\12\21\1\340\2\21\1\341\60\21"+
    "\1\26\1\21\1\24\1\21\1\26\24\21\1\342\31\21"+
    "\1\342\17\21\1\26\1\21\1\24\1\21\1\26\16\21"+
    "\1\343\57\21\1\26\1\21\1\24\1\21\1\26\26\21"+
    "\1\344\47\21\1\26\1\21\1\24\1\21\1\26\21\21"+
    "\1\345\54\21\1\26\1\21\1\24\1\21\1\26\21\21"+
    "\1\346\54\21\1\26\1\21\1\24\1\21\1\26\12\21"+
    "\1\347\63\21\1\26\1\21\1\24\1\21\1\26\26\21"+
    "\1\350\47\21\1\26\1\21\1\24\1\21\1\26\20\21"+
    "\1\351\55\21\1\26\1\21\1\24\1\21\1\26\22\21"+
    "\1\352\53\21\1\26\1\21\1\24\1\21\1\26\36\21"+
    "\1\353\37\21\1\26\1\21\1\24\1\21\1\26\35\21"+
    "\1\354\40\21\1\26\1\21\1\24\1\21\1\26\22\21"+
    "\1\355\53\21\1\26\1\21\1\24\1\21\1\26\22\21"+
    "\1\356\53\21\1\26\1\21\1\24\1\21\1\26\13\21"+
    "\1\357\62\21\1\26\1\21\1\24\1\21\1\26\37\21"+
    "\1\360\36\21\1\26\1\21\1\24\1\21\1\26\22\21"+
    "\1\361\53\21\1\26\1\21\1\24\1\21\1\26\12\21"+
    "\1\362\63\21\1\26\1\21\1\24\1\21\1\26\34\21"+
    "\1\363\41\21\1\26\1\21\1\24\1\21\1\26\22\21"+
    "\1\364\53\21\1\26\1\21\1\24\1\21\1\26\36\21"+
    "\1\365\37\21\1\26\1\21\1\24\1\21\1\26\12\21"+
    "\1\366\63\21\1\26\1\21\1\24\1\21\1\26\35\21"+
    "\1\367\40\21\1\26\1\21\1\24\1\21\1\26\36\21"+
    "\1\370\34\21\3\253\1\322\1\21\1\371\1\21\1\26"+
    "\76\21\1\26\1\21\1\24\1\21\1\26\12\21\1\372"+
    "\63\21\1\26\1\21\1\24\1\21\1\26\35\21\1\373"+
    "\26\21\1\373\5\21\74\0\1\374\102\0\1\375\6\0"+
    "\6\26\1\54\20\26\1\376\61\26\1\54\31\26\1\377"+
    "\50\26\1\54\14\26\1\u0100\65\26\1\54\32\26\1\u0101"+
    "\47\26\1\54\33\26\1\u0102\46\26\1\54\37\26\1\u0103"+
    "\42\26\1\54\16\26\1\u0104\63\26\1\54\36\26\1\u0105"+
    "\43\26\1\54\40\26\1\u0106\41\26\1\54\15\26\1\u0107"+
    "\64\26\1\54\14\26\1\u0108\2\26\1\u0109\62\26\1\54"+
    "\26\26\1\u010a\31\26\1\u010a\21\26\1\54\20\26\1\u010b"+
    "\61\26\1\54\30\26\1\u010c\51\26\1\54\23\26\1\u010d"+
    "\56\26\1\54\23\26\1\u010e\56\26\1\54\14\26\1\u010f"+
    "\65\26\1\54\30\26\1\u0110\51\26\1\54\22\26\1\u0111"+
    "\57\26\1\54\24\26\1\u0112\55\26\1\54\40\26\1\u0113"+
    "\41\26\1\54\37\26\1\u0114\42\26\1\54\24\26\1\u0115"+
    "\55\26\1\54\24\26\1\u0116\55\26\1\54\15\26\1\u0117"+
    "\64\26\1\54\41\26\1\u0118\40\26\1\54\24\26\1\u0119"+
    "\55\26\1\54\14\26\1\u011a\65\26\1\54\36\26\1\u011b"+
    "\43\26\1\54\24\26\1\u011c\55\26\1\54\40\26\1\u011d"+
    "\41\26\1\54\14\26\1\u011e\65\26\1\54\37\26\1\u011f"+
    "\42\26\1\54\40\26\1\u0120\34\26\4\322\1\26\1\371"+
    "\102\26\1\54\14\26\1\u0121\65\26\1\54\37\26\1\u0122"+
    "\26\26\1\u0122\5\26\4\21\1\26\1\21\1\24\1\21"+
    "\1\26\1\21\1\u0123\74\21\1\26\1\21\1\24\1\21"+
    "\1\26\20\21\1\u0124\55\21\1\26\1\21\1\24\1\21"+
    "\1\26\16\21\1\u0125\57\21\1\26\1\21\1\24\1\21"+
    "\1\26\46\21\1\u0126\27\21\1\26\1\21\1\24\1\21"+
    "\1\26\27\21\1\u0127\46\21\1\26\1\21\1\24\1\21"+
    "\1\26\30\21\1\u0128\45\21\1\26\1\21\1\24\1\21"+
    "\1\26\33\21\1\u0129\42\21\1\26\1\21\1\24\1\21"+
    "\1\26\24\21\1\u012a\51\21\1\26\1\21\1\24\1\21"+
    "\1\26\16\21\1\u012b\57\21\1\26\1\21\1\24\1\21"+
    "\1\26\26\21\1\u012c\47\21\1\26\1\21\1\24\1\21"+
    "\1\26\30\21\1\u012d\45\21\1\26\1\21\1\24\1\21"+
    "\1\26\33\21\1\u012e\42\21\1\26\1\21\1\24\1\21"+
    "\1\26\16\21\1\u012f\54\21\3\342\1\u010a\1\21\1\u0130"+
    "\1\21\1\26\76\21\1\26\1\21\1\24\1\21\1\26"+
    "\14\21\1\u0131\61\21\1\26\1\21\1\24\1\21\1\26"+
    "\22\21\1\u0132\53\21\1\26\1\21\1\24\1\21\1\26"+
    "\12\21\1\u0133\63\21\1\26\1\21\1\24\1\21\1\26"+
    "\16\21\1\u0134\57\21\1\26\1\21\1\24\1\21\1\26"+
    "\34\21\1\u0135\41\21\1\26\1\21\1\24\1\21\1\26"+
    "\36\21\1\u0136\37\21\1\26\1\21\1\24\1\21\1\26"+
    "\16\21\1\u0137\57\21\1\26\1\21\1\24\1\21\1\26"+
    "\14\21\1\u0138\61\21\1\26\1\21\1\24\1\21\1\26"+
    "\22\21\1\u0139\53\21\1\26\1\21\1\24\1\21\1\26"+
    "\22\21\1\u013a\53\21\1\26\1\21\1\24\1\21\1\26"+
    "\27\21\1\u013b\46\21\1\26\1\21\1\24\1\21\1\26"+
    "\17\21\1\u013c\56\21\1\26\1\21\1\24\1\21\1\26"+
    "\33\21\1\u013d\42\21\1\26\1\21\1\24\1\21\1\26"+
    "\30\21\1\u013e\45\21\1\26\1\21\1\24\1\21\1\26"+
    "\30\21\1\u013f\45\21\1\26\1\21\1\24\1\21\1\26"+
    "\26\21\1\u0140\47\21\1\26\1\21\1\24\1\21\1\26"+
    "\40\21\1\u0141\35\21\1\26\1\21\1\24\1\21\1\26"+
    "\30\21\1\u0142\45\21\1\26\1\21\1\24\1\21\1\26"+
    "\16\21\1\u0143\54\21\3\366\1\u011e\1\21\1\u0144\1\21"+
    "\1\26\76\21\1\26\1\21\1\24\1\21\1\26\30\21"+
    "\1\u0145\45\21\1\26\1\21\1\24\1\21\1\26\25\21"+
    "\1\u0146\50\21\1\26\1\21\1\24\1\21\1\26\33\21"+
    "\1\u0147\42\21\1\26\1\21\1\24\1\21\1\26\16\21"+
    "\1\u0148\33\21\1\u0148\17\21\72\0\1\u0149\102\0\1\u014a"+
    "\10\0\6\26\1\54\22\26\1\u014b\57\26\1\54\20\26"+
    "\1\u014c\61\26\1\54\50\26\1\u014d\31\26\1\54\31\26"+
    "\1\u014e\50\26\1\54\32\26\1\u014f\47\26\1\54\35\26"+
    "\1\u0150\44\26\1\54\26\26\1\u0151\53\26\1\54\20\26"+
    "\1\u0152\61\26\1\54\30\26\1\u0153\51\26\1\54\32\26"+
    "\1\u0154\47\26\1\54\35\26\1\u0155\44\26\1\54\20\26"+
    "\1\u0156\54\26\4\u010a\1\26\1\u0130\102\26\1\54\16\26"+
    "\1\u0157\63\26\1\54\24\26\1\u0158\55\26\1\54\14\26"+
    "\1\u0159\65\26\1\54\20\26\1\u015a\61\26\1\54\36\26"+
    "\1\u015b\43\26\1\54\40\26\1\u015c\41\26\1\54\20\26"+
    "\1\u015d\61\26\1\54\16\26\1\u015e\63\26\1\54\24\26"+
    "\1\u015f\55\26\1\54\24\26\1\u0160\55\26\1\54\31\26"+
    "\1\u0161\50\26\1\54\21\26\1\u0162\60\26\1\54\35\26"+
    "\1\u0163\44\26\1\54\32\26\1\u0164\47\26\1\54\32\26"+
    "\1\u0165\47\26\1\54\30\26\1\u0166\51\26\1\54\42\26"+
    "\1\u0167\37\26\1\54\32\26\1\u0168\47\26\1\54\20\26"+
    "\1\u0169\54\26\4\u011e\1\26\1\u0144\102\26\1\54\32\26"+
    "\1\u016a\47\26\1\54\27\26\1\u016b\52\26\1\54\35\26"+
    "\1\u016c\44\26\1\54\20\26\1\u016d\33\26\1\u016d\17\26"+
    "\4\21\1\26\1\21\1\24\1\21\1\26\2\21\1\u016e"+
    "\1\u016f\3\u0170\67\21\1\26\1\21\1\24\1\21\1\26"+
    "\12\21\1\u0171\63\21\1\26\1\21\1\24\1\21\1\26"+
    "\12\21\1\u0172\63\21\1\26\1\21\1\24\1\21\1\26"+
    "\35\21\1\u0173\35\21\3\u0127\1\u014e\1\21\1\u0174\1\21"+
    "\1\26\76\21\1\26\1\21\1\24\1\21\1\26\46\21"+
    "\1\u0175\27\21\1\26\1\21\1\24\1\21\1\26\30\21"+
    "\1\u0176\45\21\1\26\1\21\1\24\1\21\1\26\13\21"+
    "\1\u0177\57\21\3\u012b\1\u0152\1\21\1\u0178\1\21\1\26"+
    "\76\21\1\26\1\21\1\24\1\21\1\26\27\21\1\u0179"+
    "\43\21\3\u012d\1\u0154\1\21\1\u017a\1\21\1\26\76\21"+
    "\1\26\1\21\1\24\1\21\1\26\46\21\1\u017b\27\21"+
    "\1\26\1\21\1\24\1\21\1\26\27\21\1\u017c\46\21"+
    "\1\26\1\21\1\24\1\21\1\26\21\21\1\u017d\54\21"+
    "\1\26\1\21\1\24\1\21\1\26\27\21\1\u017e\46\21"+
    "\1\26\1\21\1\24\1\21\1\26\46\21\1\u017f\27\21"+
    "\1\26\1\21\1\24\1\21\1\26\33\21\1\u0180\37\21"+
    "\3\u0135\1\u015b\1\21\1\u0181\1\21\1\26\76\21\1\26"+
    "\1\21\1\24\1\21\1\26\25\21\1\u0182\50\21\1\26"+
    "\1\21\1\24\1\21\1\26\27\21\1\u0183\46\21\1\26"+
    "\1\21\1\24\1\21\1\26\16\21\1\u0184\57\21\1\26"+
    "\1\21\1\24\1\21\1\26\16\21\1\u0185\57\21\1\26"+
    "\1\21\1\24\1\21\1\26\17\21\1\u0186\56\21\1\26"+
    "\1\21\1\24\1\21\1\26\46\21\1\u0187\27\21\1\26"+
    "\1\21\1\24\1\21\1\26\22\21\1\u0188\53\21\1\26"+
    "\1\21\1\24\1\21\1\26\16\21\1\u0189\57\21\1\26"+
    "\1\21\1\24\1\21\1\26\46\21\1\u018a\27\21\1\26"+
    "\1\21\1\24\1\21\1\26\27\21\1\u018b\46\21\1\26"+
    "\1\21\1\24\1\21\1\26\16\21\1\u018c\57\21\1\26"+
    "\1\21\1\24\1\21\1\26\30\21\1\u018d\42\21\3\u0142"+
    "\1\u0168\1\21\1\u018e\1\21\1\26\76\21\1\26\1\21"+
    "\1\24\1\21\1\26\33\21\1\u018f\42\21\1\26\1\21"+
    "\1\24\1\21\1\26\46\21\1\u0190\27\21\1\26\1\21"+
    "\1\24\1\21\1\26\30\21\1\u0191\45\21\1\26\1\21"+
    "\1\24\1\21\1\26\22\21\1\u0192\50\21\3\u0148\1\u016d"+
    "\1\21\1\u0193\1\21\1\26\72\21\70\0\1\u0194\102\0"+
    "\1\u0195\12\0\6\26\1\54\14\26\1\u0196\65\26\1\54"+
    "\14\26\1\u0197\65\26\1\54\37\26\1\u0198\35\26\4\u014e"+
    "\1\26\1\u0174\102\26\1\54\50\26\1\u0199\31\26\1\54"+
    "\32\26\1\u019a\47\26\1\54\15\26\1\u019b\57\26\4\u0152"+
    "\1\26\1\u0178\102\26\1\54\31\26\1\u019c\43\26\4\u0154"+
    "\1\26\1\u017a\102\26\1\54\50\26\1\u019d\31\26\1\54"+
    "\31\26\1\u019e\50\26\1\54\23\26\1\u019f\56\26\1\54"+
    "\31\26\1\u01a0\50\26\1\54\50\26\1\u01a1\31\26\1\54"+
    "\35\26\1\u01a2\37\26\4\u015b\1\26\1\u0181\102\26\1\54"+
    "\27\26\1\u01a3\52\26\1\54\31\26\1\u01a4\50\26\1\54"+
    "\20\26\1\u01a5\61\26\1\54\20\26\1\u01a6\61\26\1\54"+
    "\21\26\1\u01a7\60\26\1\54\50\26\1\u01a8\31\26\1\54"+
    "\24\26\1\u01a9\55\26\1\54\20\26\1\u01aa\61\26\1\54"+
    "\50\26\1\u01ab\31\26\1\54\31\26\1\u01ac\50\26\1\54"+
    "\20\26\1\u01ad\61\26\1\54\32\26\1\u01ae\42\26\4\u0168"+
    "\1\26\1\u018e\102\26\1\54\35\26\1\u01af\44\26\1\54"+
    "\50\26\1\u01b0\31\26\1\54\32\26\1\u01b1\47\26\1\54"+
    "\24\26\1\u01b2\50\26\4\u016d\1\26\1\u0193\74\26\4\21"+
    "\1\26\1\21\1\24\1\21\1\26\3\21\4\u0170\67\21"+
    "\1\26\1\21\1\24\1\21\1\26\1\21\1\u01b3\3\u0170"+
    "\71\21\1\26\1\21\1\24\1\21\1\26\1\21\1\u01b3"+
    "\74\21\1\26\1\21\1\24\1\21\1\26\33\21\1\u01b4"+
    "\42\21\1\26\1\21\1\24\1\21\1\26\14\21\1\u01b5"+
    "\61\21\1\26\1\21\1\24\1\21\1\26\16\21\1\u01b6"+
    "\57\21\1\26\1\21\1\24\1\21\1\26\35\21\1\u01b7"+
    "\35\21\3\u0176\1\u019a\1\21\1\u01b8\1\21\1\26\76\21"+
    "\1\26\1\21\1\24\1\21\1\26\30\21\1\u01b9\45\21"+
    "\1\26\1\21\1\24\1\21\1\26\12\21\1\u01ba\63\21"+
    "\1\26\1\21\1\24\1\21\1\26\36\21\1\u01bb\37\21"+
    "\1\26\1\21\1\24\1\21\1\26\14\21\1\u01bc\61\21"+
    "\1\26\1\21\1\24\1\21\1\26\12\21\1\u01bd\63\21"+
    "\1\26\1\21\1\24\1\21\1\26\12\21\1\u01be\63\21"+
    "\1\26\1\21\1\24\1\21\1\26\14\21\1\u01bf\11\21"+
    "\1\u01c0\47\21\1\26\1\21\1\24\1\21\1\26\30\21"+
    "\1\u01c1\45\21\1\26\1\21\1\24\1\21\1\26\12\21"+
    "\1\u01c2\60\21\3\u0183\1\u01a4\1\21\1\u01c3\1\21\1\26"+
    "\73\21\3\u0184\1\u01a5\1\21\1\u01c4\1\21\1\26\76\21"+
    "\1\26\1\21\1\24\1\21\1\26\33\21\1\u01c5\42\21"+
    "\1\26\1\21\1\24\1\21\1\26\22\21\1\u01c6\53\21"+
    "\1\26\1\21\1\24\1\21\1\26\36\21\1\u01c7\37\21"+
    "\1\26\1\21\1\24\1\21\1\26\14\21\1\u01c8\56\21"+
    "\3\u01c9\1\u01ca\1\21\1\u01cb\1\21\1\26\46\21\1\u01cc"+
    "\27\21\1\26\1\21\1\24\1\21\1\26\17\21\1\u01cd"+
    "\11\21\1\u01ce\44\21\1\26\1\21\1\24\1\21\1\26"+
    "\16\21\1\u01cf\57\21\1\26\1\21\1\24\1\21\1\26"+
    "\35\21\1\u01d0\40\21\1\26\1\21\1\24\1\21\1\26"+
    "\33\21\1\u01d1\42\21\1\26\1\21\1\24\1\21\1\26"+
    "\22\21\1\u01d2\53\21\1\26\1\21\1\24\1\21\1\26"+
    "\37\21\1\u01d3\33\21\3\u0191\1\u01b1\1\21\1\u01d4\1\21"+
    "\1\26\76\21\1\26\1\21\1\24\1\21\1\26\30\21"+
    "\1\u01d5\41\21\66\0\1\u01d6\102\0\1\u01d7\14\0\6\26"+
    "\1\54\35\26\1\u01d8\44\26\1\54\16\26\1\u01d9\63\26"+
    "\1\54\20\26\1\u01da\61\26\1\54\37\26\1\u01db\35\26"+
    "\4\u019a\1\26\1\u01b8\102\26\1\54\32\26\1\u01dc\47\26"+
    "\1\54\14\26\1\u01dd\65\26\1\54\40\26\1\u01de\41\26"+
    "\1\54\16\26\1\u01df\63\26\1\54\14\26\1\u01e0\65\26"+
    "\1\54\14\26\1\u01e1\65\26\1\54\16\26\1\u01e2\11\26"+
    "\1\u01e3\51\26\1\54\32\26\1\u01e4\47\26\1\54\14\26"+
    "\1\u01e5\60\26\4\u01a4\1\26\1\u01c3\75\26\4\u01a5\1\26"+
    "\1\u01c4\102\26\1\54\35\26\1\u01e6\44\26\1\54\24\26"+
    "\1\u01e7\55\26\1\54\40\26\1\u01e8\41\26\1\54\16\26"+
    "\1\u01e9\56\26\4\u01ca\1\26\1\u01cb\50\26\1\u01ea\31\26"+
    "\1\54\21\26\1\u01eb\11\26\1\u01ec\46\26\1\54\20\26"+
    "\1\u01ed\61\26\1\54\37\26\1\u01ee\42\26\1\54\35\26"+
    "\1\u01ef\44\26\1\54\24\26\1\u01f0\55\26\1\54\41\26"+
    "\1\u01f1\33\26\4\u01b1\1\26\1\u01d4\102\26\1\54\32\26"+
    "\1\u01f2\41\26\4\21\1\26\1\21\1\24\1\21\1\26"+
    "\2\21\1\u01f3\2\u01f4\1\u01f5\1\u01f6\67\21\1\26\1\21"+
    "\1\24\1\21\1\26\46\21\1\u01f7\27\21\1\26\1\21"+
    "\1\24\1\21\1\26\22\21\1\u01f8\53\21\1\26\1\21"+
    "\1\24\1\21\1\26\41\21\1\u01f9\34\21\1\26\1\21"+
    "\1\24\1\21\1\26\16\21\1\u01fa\57\21\1\26\1\21"+
    "\1\24\1\21\1\26\41\21\1\u01fb\34\21\1\26\1\21"+
    "\1\24\1\21\1\26\34\21\1\u01fc\41\21\1\26\1\21"+
    "\1\24\1\21\1\26\34\21\1\u01fd\41\21\1\26\1\21"+
    "\1\24\1\21\1\26\22\21\1\u01fe\50\21\3\u01bd\1\u01e0"+
    "\1\21\1\u01ff\1\21\1\26\76\21\1\26\1\21\1\24"+
    "\1\21\1\26\33\21\1\u0200\42\21\1\26\1\21\1\24"+
    "\1\21\1\26\33\21\1\u0201\42\21\1\26\1\21\1\24"+
    "\1\21\1\26\30\21\1\u0202\42\21\3\u01c1\1\u01e4\1\21"+
    "\1\u0203\1\21\1\26\76\21\1\26\1\21\1\24\1\21"+
    "\1\26\33\21\1\u0204\42\21\1\26\1\21\1\24\1\21"+
    "\1\26\15\21\1\u0205\60\21\1\26\1\21\1\24\1\21"+
    "\1\26\14\21\1\u0206\61\21\1\26\1\21\1\24\1\21"+
    "\1\26\34\21\1\u0207\41\21\1\26\1\21\1\24\1\21"+
    "\1\26\12\21\1\u0208\60\21\3\u01c9\1\u01ca\1\21\1\u01cb"+
    "\1\21\1\26\72\21\1\26\4\u01ca\1\26\1\u01cb\74\26"+
    "\4\21\1\26\1\21\1\24\1\21\1\26\14\21\1\u0209"+
    "\61\21\1\26\1\21\1\24\1\21\1\26\30\21\1\u020a"+
    "\45\21\1\26\1\21\1\24\1\21\1\26\12\21\1\u020b"+
    "\63\21\1\26\1\21\1\24\1\21\1\26\34\21\1\u020c"+
    "\41\21\1\26\1\21\1\24\1\21\1\26\33\21\1\u020d"+
    "\42\21\1\26\1\21\1\24\1\21\1\26\15\21\1\u020e"+
    "\60\21\1\26\1\21\1\24\1\21\1\26\15\21\1\u020f"+
    "\60\21\1\26\1\21\1\24\1\21\1\26\22\21\1\u0210"+
    "\50\21\3\u0211\1\u0212\1\21\1\u0213\1\21\1\26\46\21"+
    "\1\u0214\23\21\61\0\1\u0215\102\0\1\u0216\21\0\6\26"+
    "\1\54\50\26\1\u0217\31\26\1\54\24\26\1\u0218\55\26"+
    "\1\54\43\26\1\u0219\36\26\1\54\20\26\1\u021a\61\26"+
    "\1\54\43\26\1\u021b\36\26\1\54\36\26\1\u021c\43\26"+
    "\1\54\36\26\1\u021d\43\26\1\54\24\26\1\u021e\50\26"+
    "\4\u01e0\1\26\1\u01ff\102\26\1\54\35\26\1\u021f\44\26"+
    "\1\54\35\26\1\u0220\44\26\1\54\32\26\1\u0221\42\26"+
    "\4\u01e4\1\26\1\u0203\102\26\1\54\35\26\1\u0222\44\26"+
    "\1\54\17\26\1\u0223\62\26\1\54\16\26\1\u0224\63\26"+
    "\1\54\36\26\1\u0225\43\26\1\54\14\26\1\u0226\65\26"+
    "\1\54\16\26\1\u0227\63\26\1\54\32\26\1\u0228\47\26"+
    "\1\54\14\26\1\u0229\65\26\1\54\36\26\1\u022a\43\26"+
    "\1\54\35\26\1\u022b\44\26\1\54\17\26\1\u022c\62\26"+
    "\1\54\17\26\1\u022d\62\26\1\54\24\26\1\u022e\50\26"+
    "\4\u0212\1\26\1\u0213\50\26\1\u022f\23\26\4\21\1\26"+
    "\1\21\1\24\1\21\1\26\3\21\4\u01f6\67\21\1\26"+
    "\1\21\1\u0230\1\21\1\26\2\21\5\u01f6\67\21\1\26"+
    "\1\21\1\u0230\1\21\1\26\2\21\2\u01f6\72\21\1\26"+
    "\1\21\1\u0230\1\21\1\26\76\21\1\26\1\21\1\24"+
    "\1\21\1\26\14\21\1\u0231\61\21\1\26\1\21\1\24"+
    "\1\21\1\26\30\21\1\u0232\45\21\1\26\1\21\1\24"+
    "\1\21\1\26\35\21\1\u0233\40\21\1\26\1\21\1\24"+
    "\1\21\1\26\41\21\1\u0234\31\21\3\u01fb\1\u021b\1\21"+
    "\1\u0235\1\21\1\26\73\21\3\u01fc\1\u021c\1\21\1\u0236"+
    "\1\21\1\26\76\21\1\26\1\21\1\24\1\21\1\26"+
    "\36\21\1\u0237\37\21\1\26\1\21\1\24\1\21\1\26"+
    "\12\21\1\u0238\63\21\1\26\1\21\1\24\1\21\1\26"+
    "\46\21\1\u0239\27\21\1\26\1\21\1\24\1\21\1\26"+
    "\16\21\1\u023a\57\21\1\26\1\21\1\24\1\21\1\26"+
    "\15\21\1\u023b\60\21\1\26\1\21\1\24\1\21\1\26"+
    "\22\21\1\u023c\53\21\1\26\1\21\1\24\1\21\1\26"+
    "\12\21\1\u023d\63\21\1\26\1\21\1\24\1\21\1\26"+
    "\12\21\1\u023e\63\21\1\26\1\21\1\24\1\21\1\26"+
    "\36\21\1\u023f\37\21\1\26\1\21\1\24\1\21\1\26"+
    "\33\21\1\u0240\42\21\1\26\1\21\1\24\1\21\1\26"+
    "\12\21\1\u0241\63\21\1\26\1\21\1\24\1\21\1\26"+
    "\33\21\1\u0242\42\21\1\26\1\21\1\24\1\21\1\26"+
    "\34\21\1\u0243\36\21\3\u020c\1\u022a\1\21\1\u0244\1\21"+
    "\1\26\76\21\1\26\1\21\1\24\1\21\1\26\30\21"+
    "\1\u0245\42\21\3\u020e\1\u022c\1\21\1\u0246\1\21\1\26"+
    "\76\21\1\26\1\21\1\24\1\21\1\26\30\21\1\u0247"+
    "\45\21\1\26\1\21\1\24\1\21\1\26\34\21\1\u0248"+
    "\36\21\3\u0211\1\u0212\1\21\1\u0213\1\21\1\26\72\21"+
    "\1\26\4\u0212\1\26\1\u0213\74\26\4\21\1\26\1\21"+
    "\1\24\1\21\1\26\12\21\1\u0249\1\21\1\u024a\12\21"+
    "\1\u024b\42\21\66\0\1\u024c\102\0\1\u024d\14\0\6\26"+
    "\1\54\16\26\1\u024e\63\26\1\54\32\26\1\u024f\47\26"+
    "\1\54\37\26\1\u0250\42\26\1\54\43\26\1\u0251\31\26"+
    "\4\u021b\1\26\1\u0235\75\26\4\u021c\1\26\1\u0236\102\26"+
    "\1\54\40\26\1\u0252\41\26\1\54\14\26\1\u0253\65\26"+
    "\1\54\50\26\1\u0254\31\26\1\54\20\26\1\u0255\61\26"+
    "\1\54\17\26\1\u0256\62\26\1\54\24\26\1\u0257\55\26"+
    "\1\54\14\26\1\u0258\65\26\1\54\14\26\1\u0259\65\26"+
    "\1\54\40\26\1\u025a\41\26\1\54\35\26\1\u025b\44\26"+
    "\1\54\14\26\1\u025c\65\26\1\54\35\26\1\u025d\44\26"+
    "\1\54\36\26\1\u025e\36\26\4\u022a\1\26\1\u0244\102\26"+
    "\1\54\32\26\1\u025f\42\26\4\u022c\1\26\1\u0246\102\26"+
    "\1\54\32\26\1\u0260\47\26\1\54\36\26\1\u0261\43\26"+
    "\1\54\14\26\1\u0262\1\26\1\u0263\12\26\1\u0264\42\26"+
    "\4\21\1\26\1\21\1\24\1\21\1\26\30\21\1\u0265"+
    "\45\21\1\26\1\21\1\24\1\21\1\26\27\21\1\u0266"+
    "\46\21\1\26\1\21\1\24\1\21\1\26\30\21\1\u0267"+
    "\45\21\1\26\1\21\1\24\1\21\1\26\35\21\1\u0268"+
    "\40\21\1\26\1\21\1\24\1\21\1\26\12\21\1\u0269"+
    "\63\21\1\26\1\21\1\24\1\21\1\26\25\21\1\u026a"+
    "\50\21\1\26\1\21\1\24\1\21\1\26\14\21\1\u026b"+
    "\2\21\1\u026c\16\21\1\u026d\37\21\1\26\1\21\1\24"+
    "\1\21\1\26\12\21\1\u026e\63\21\1\26\1\21\1\24"+
    "\1\21\1\26\22\21\1\u026f\53\21\1\26\1\21\1\24"+
    "\1\21\1\26\30\21\1\u0270\42\21\3\u023d\1\u0258\1\21"+
    "\1\u0271\1\21\1\26\76\21\1\26\1\21\1\24\1\21"+
    "\1\26\33\21\1\u0272\42\21\1\26\1\21\1\24\1\21"+
    "\1\26\12\21\1\u0273\63\21\1\26\1\21\1\24\1\21"+
    "\1\26\46\21\1\u0274\27\21\1\26\1\21\1\24\1\21"+
    "\1\26\26\21\1\u0275\47\21\1\26\1\21\1\24\1\21"+
    "\1\26\26\21\1\u0276\47\21\1\26\1\21\1\24\1\21"+
    "\1\26\34\21\1\u0277\41\21\1\26\1\21\1\24\1\21"+
    "\1\26\34\21\1\u0278\36\21\3\u0247\1\u0260\1\21\1\u0279"+
    "\1\21\1\26\76\21\1\26\1\21\1\24\1\21\1\26"+
    "\22\21\1\u027a\53\21\1\26\1\21\1\24\1\21\1\26"+
    "\27\21\1\u027b\46\21\1\26\1\21\1\24\1\21\1\26"+
    "\33\21\1\u027c\42\21\1\26\1\21\1\24\1\21\1\26"+
    "\36\21\1\u027d\33\21\75\0\1\u027e\102\0\1\u027f\5\0"+
    "\6\26\1\54\32\26\1\u0280\47\26\1\54\31\26\1\u0281"+
    "\50\26\1\54\32\26\1\u0282\47\26\1\54\37\26\1\u0283"+
    "\42\26\1\54\14\26\1\u0284\65\26\1\54\27\26\1\u0285"+
    "\52\26\1\54\16\26\1\u0286\2\26\1\u0287\16\26\1\u0288"+
    "\41\26\1\54\14\26\1\u0289\65\26\1\54\24\26\1\u028a"+
    "\55\26\1\54\32\26\1\u028b\42\26\4\u0258\1\26\1\u0271"+
    "\102\26\1\54\35\26\1\u028c\44\26\1\54\14\26\1\u028d"+
    "\65\26\1\54\50\26\1\u028e\31\26\1\54\30\26\1\u028f"+
    "\51\26\1\54\30\26\1\u0290\51\26\1\54\36\26\1\u0291"+
    "\43\26\1\54\36\26\1\u0292\36\26\4\u0260\1\26\1\u0279"+
    "\102\26\1\54\24\26\1\u0293\55\26\1\54\31\26\1\u0294"+
    "\50\26\1\54\35\26\1\u0295\44\26\1\54\40\26\1\u0296"+
    "\33\26\4\21\1\26\1\21\1\24\1\21\1\26\26\21"+
    "\1\u0297\44\21\3\u0266\1\u0281\1\21\1\u0298\1\21\1\26"+
    "\73\21\3\u0267\1\u0282\1\21\1\u0299\1\21\1\26\76\21"+
    "\1\26\1\21\1\24\1\21\1\26\30\21\1\u029a\45\21"+
    "\1\26\1\21\1\24\1\21\1\26\33\21\1\u029b\42\21"+
    "\1\26\1\21\1\24\1\21\1\26\16\21\1\u029c\57\21"+
    "\1\26\1\21\1\24\1\21\1\26\30\21\1\u029d\45\21"+
    "\1\26\1\21\1\24\1\21\1\26\30\21\1\u029e\45\21"+
    "\1\26\1\21\1\24\1\21\1\26\34\21\1\u029f\41\21"+
    "\1\26\1\21\1\24\1\21\1\26\14\21\1\u02a0\61\21"+
    "\1\26\1\21\1\24\1\21\1\26\17\21\1\u02a1\53\21"+
    "\3\u0270\1\u028b\1\21\1\u02a2\1\21\1\26\73\21\3\u0272"+
    "\1\u028c\1\21\1\u02a3\1\21\1\26\76\21\1\26\1\21"+
    "\1\24\1\21\1\26\33\21\1\u02a4\42\21\1\26\1\21"+
    "\1\24\1\21\1\26\14\21\1\u02a5\2\21\1\u02a6\16\21"+
    "\1\u02a7\37\21\1\26\1\21\1\24\1\21\1\26\31\21"+
    "\1\u02a8\44\21\1\26\1\21\1\24\1\21\1\26\36\21"+
    "\1\u02a9\37\21\1\26\1\21\1\24\1\21\1\26\40\21"+
    "\1\u02aa\35\21\1\26\1\21\1\24\1\21\1\26\46\21"+
    "\1\u02ab\27\21\1\26\1\21\1\24\1\21\1\26\13\21"+
    "\1\u02ac\62\21\1\26\1\21\1\24\1\21\1\26\35\21"+
    "\1\u02ad\40\21\1\26\1\21\1\24\1\21\1\26\16\21"+
    "\1\u02ae\57\21\1\26\1\21\1\24\1\21\1\26\16\21"+
    "\1\u02af\53\21\76\0\1\u02b0\102\0\1\u02b1\4\0\6\26"+
    "\1\54\30\26\1\u02b2\44\26\4\u0281\1\26\1\u0298\75\26"+
    "\4\u0282\1\26\1\u0299\102\26\1\54\32\26\1\u02b3\47\26"+
    "\1\54\35\26\1\u02b4\44\26\1\54\20\26\1\u02b5\61\26"+
    "\1\54\32\26\1\u02b6\47\26\1\54\32\26\1\u02b7\47\26"+
    "\1\54\36\26\1\u02b8\43\26\1\54\16\26\1\u02b9\63\26"+
    "\1\54\21\26\1\u02ba\53\26\4\u028b\1\26\1\u02a2\75\26"+
    "\4\u028c\1\26\1\u02a3\102\26\1\54\35\26\1\u02bb\44\26"+
    "\1\54\16\26\1\u02bc\2\26\1\u02bd\16\26\1\u02be\41\26"+
    "\1\54\33\26\1\u02bf\46\26\1\54\40\26\1\u02c0\41\26"+
    "\1\54\42\26\1\u02c1\37\26\1\54\50\26\1\u02c2\31\26"+
    "\1\54\15\26\1\u02c3\64\26\1\54\37\26\1\u02c4\42\26"+
    "\1\54\20\26\1\u02c5\61\26\1\54\20\26\1\u02c6\53\26"+
    "\4\21\1\26\1\21\1\24\1\21\1\26\31\21\1\u02c7"+
    "\41\21\3\u029a\1\u02b3\1\21\1\u02c8\1\21\1\26\76\21"+
    "\1\26\1\21\1\24\1\21\1\26\22\21\1\u02c9\53\21"+
    "\1\26\1\21\1\24\1\21\1\26\34\21\1\u02ca\41\21"+
    "\1\26\1\21\1\24\1\21\1\26\26\21\1\u02cb\47\21"+
    "\1\26\1\21\1\24\1\21\1\26\33\21\1\u02cc\42\21"+
    "\1\26\1\21\1\24\1\21\1\26\36\21\1\u02cd\37\21"+
    "\1\26\1\21\1\24\1\21\1\26\22\21\1\u02ce\53\21"+
    "\1\26\1\21\1\24\1\21\1\26\22\21\1\u02cf\53\21"+
    "\1\26\1\21\1\24\1\21\1\26\22\21\1\u02d0\53\21"+
    "\1\26\1\21\1\24\1\21\1\26\30\21\1\u02d1\45\21"+
    "\1\26\1\21\1\24\1\21\1\26\30\21\1\u02d2\45\21"+
    "\1\26\1\21\1\24\1\21\1\26\34\21\1\u02d3\41\21"+
    "\1\26\1\21\1\24\1\21\1\26\30\21\1\u02d4\45\21"+
    "\1\26\1\21\1\24\1\21\1\26\25\21\1\u02d5\50\21"+
    "\1\26\1\21\1\24\1\21\1\26\30\21\1\u02d6\45\21"+
    "\1\26\1\21\1\24\1\21\1\26\14\21\1\u02d7\2\21"+
    "\1\u02d8\56\21\1\26\1\21\1\24\1\21\1\26\25\21"+
    "\1\u02d9\50\21\1\26\1\21\1\24\1\21\1\26\22\21"+
    "\1\u02da\53\21\1\26\1\21\1\24\1\21\1\26\12\21"+
    "\1\u02db\63\21\1\26\1\21\1\24\1\21\1\26\37\21"+
    "\1\u02dc\32\21\62\0\1\u02dd\102\0\1\u02de\20\0\6\26"+
    "\1\54\33\26\1\u02df\41\26\4\u02b3\1\26\1\u02c8\102\26"+
    "\1\54\24\26\1\u02e0\55\26\1\54\36\26\1\u02e1\43\26"+
    "\1\54\30\26\1\u02e2\51\26\1\54\35\26\1\u02e3\44\26"+
    "\1\54\40\26\1\u02e4\41\26\1\54\24\26\1\u02e5\55\26"+
    "\1\54\24\26\1\u02e6\55\26\1\54\24\26\1\u02e7\55\26"+
    "\1\54\32\26\1\u02e8\47\26\1\54\32\26\1\u02e9\47\26"+
    "\1\54\36\26\1\u02ea\43\26\1\54\32\26\1\u02eb\47\26"+
    "\1\54\27\26\1\u02ec\52\26\1\54\32\26\1\u02ed\47\26"+
    "\1\54\16\26\1\u02ee\2\26\1\u02ef\60\26\1\54\27\26"+
    "\1\u02f0\52\26\1\54\24\26\1\u02f1\55\26\1\54\14\26"+
    "\1\u02f2\65\26\1\54\41\26\1\u02f3\32\26\4\21\1\26"+
    "\1\21\1\24\1\21\1\26\30\21\1\u02f4\45\21\1\26"+
    "\1\21\1\24\1\21\1\26\30\21\1\u02f5\45\21\1\26"+
    "\1\21\1\24\1\21\1\26\46\21\1\u02f6\27\21\1\26"+
    "\1\21\1\24\1\21\1\26\31\21\1\u02f7\44\21\1\26"+
    "\1\21\1\24\1\21\1\26\26\21\1\u02f8\47\21\1\26"+
    "\1\21\1\24\1\21\1\26\12\21\1\u02f9\63\21\1\26"+
    "\1\21\1\24\1\21\1\26\30\21\1\u02fa\45\21\1\26"+
    "\1\21\1\24\1\21\1\26\14\21\1\u02fb\61\21\1\26"+
    "\1\21\1\24\1\21\1\26\30\21\1\u02fc\45\21\1\26"+
    "\1\21\1\24\1\21\1\26\26\21\1\u02fd\47\21\1\26"+
    "\1\21\1\24\1\21\1\26\33\21\1\u02fe\42\21\1\26"+
    "\1\21\1\24\1\21\1\26\36\21\1\u02ff\34\21\3\u02d4"+
    "\1\u02eb\1\21\1\u0300\1\21\1\26\76\21\1\26\1\21"+
    "\1\24\1\21\1\26\12\21\1\u0301\63\21\1\26\1\21"+
    "\1\24\1\21\1\26\33\21\1\u0302\42\21\1\26\1\21"+
    "\1\24\1\21\1\26\30\21\1\u0303\45\21\1\26\1\21"+
    "\1\24\1\21\1\26\30\21\1\u0304\45\21\1\26\1\21"+
    "\1\24\1\21\1\26\16\21\1\u0305\57\21\1\26\1\21"+
    "\1\24\1\21\1\26\20\21\1\u0306\55\21\1\26\1\21"+
    "\1\24\1\21\1\26\14\21\1\u0307\61\21\1\26\1\21"+
    "\1\24\1\21\1\26\30\21\1\u0308\41\21\63\0\1\u0309"+
    "\102\0\1\u030a\17\0\6\26\1\54\32\26\1\u030b\47\26"+
    "\1\54\32\26\1\u030c\47\26\1\54\50\26\1\u030d\31\26"+
    "\1\54\33\26\1\u030e\46\26\1\54\30\26\1\u030f\51\26"+
    "\1\54\14\26\1\u0310\65\26\1\54\32\26\1\u0311\47\26"+
    "\1\54\16\26\1\u0312\63\26\1\54\32\26\1\u0313\47\26"+
    "\1\54\30\26\1\u0314\51\26\1\54\35\26\1\u0315\44\26"+
    "\1\54\40\26\1\u0316\34\26\4\u02eb\1\26\1\u0300\102\26"+
    "\1\54\14\26\1\u0317\65\26\1\54\35\26\1\u0318\44\26"+
    "\1\54\32\26\1\u0319\47\26\1\54\32\26\1\u031a\47\26"+
    "\1\54\20\26\1\u031b\61\26\1\54\22\26\1\u031c\57\26"+
    "\1\54\16\26\1\u031d\63\26\1\54\32\26\1\u031e\41\26"+
    "\4\21\1\26\1\21\1\24\1\21\1\26\27\21\1\u031f"+
    "\43\21\3\u02f5\1\u030c\1\21\1\u0320\1\21\1\26\76\21"+
    "\1\26\1\21\1\24\1\21\1\26\36\21\1\u0321\37\21"+
    "\1\26\1\21\1\24\1\21\1\26\30\21\1\u0322\45\21"+
    "\1\26\1\21\1\24\1\21\1\26\36\21\1\u0323\37\21"+
    "\1\26\1\21\1\24\1\21\1\26\33\21\1\u0324\42\21"+
    "\1\26\1\21\1\24\1\21\1\26\27\21\1\u0325\46\21"+
    "\1\26\1\21\1\24\1\21\1\26\12\21\1\u0326\60\21"+
    "\3\u02fc\1\u0313\1\21\1\u0327\1\21\1\26\76\21\1\26"+
    "\1\21\1\24\1\21\1\26\31\21\1\u0328\44\21\1\26"+
    "\1\21\1\24\1\21\1\26\26\21\1\u0329\47\21\1\26"+
    "\1\21\1\24\1\21\1\26\12\21\1\u032a\63\21\1\26"+
    "\1\21\1\24\1\21\1\26\33\21\1\u032b\42\21\1\26"+
    "\1\21\1\24\1\21\1\26\15\21\1\u032c\60\21\1\26"+
    "\1\21\1\24\1\21\1\26\26\21\1\u032d\47\21\1\26"+
    "\1\21\1\24\1\21\1\26\33\21\1\u032e\37\21\3\u0305"+
    "\1\u031b\1\21\1\u032f\1\21\1\26\76\21\1\26\1\21"+
    "\1\24\1\21\1\26\36\21\1\u0330\37\21\1\26\1\21"+
    "\1\24\1\21\1\26\22\21\1\u0331\50\21\3\u0308\1\u031e"+
    "\1\21\1\u0332\1\21\1\26\72\21\74\0\1\u0333\102\0"+
    "\1\u0334\6\0\6\26\1\54\31\26\1\u0335\43\26\4\u030c"+
    "\1\26\1\u0320\102\26\1\54\40\26\1\u0336\41\26\1\54"+
    "\32\26\1\u0337\47\26\1\54\40\26\1\u0338\41\26\1\54"+
    "\35\26\1\u0339\44\26\1\54\31\26\1\u033a\50\26\1\54"+
    "\14\26\1\u033b\60\26\4\u0313\1\26\1\u0327\102\26\1\54"+
    "\33\26\1\u033c\46\26\1\54\30\26\1\u033d\51\26\1\54"+
    "\14\26\1\u033e\65\26\1\54\35\26\1\u033f\44\26\1\54"+
    "\17\26\1\u0340\62\26\1\54\30\26\1\u0341\51\26\1\54"+
    "\35\26\1\u0342\37\26\4\u031b\1\26\1\u032f\102\26\1\54"+
    "\40\26\1\u0343\41\26\1\54\24\26\1\u0344\50\26\4\u031e"+
    "\1\26\1\u0332\74\26\4\21\1\26\1\21\1\24\1\21"+
    "\1\26\16\21\1\u0345\57\21\1\26\1\21\1\24\1\21"+
    "\1\26\34\21\1\u0346\41\21\1\26\1\21\1\24\1\21"+
    "\1\26\27\21\1\u0347\46\21\1\26\1\21\1\24\1\21"+
    "\1\26\25\21\1\u0348\50\21\1\26\1\21\1\24\1\21"+
    "\1\26\22\21\1\u0349\50\21\3\u0325\1\u033a\1\21\1\u034a"+
    "\1\21\1\26\76\21\1\26\1\21\1\24\1\21\1\26"+
    "\14\21\1\u034b\61\21\1\26\1\21\1\24\1\21\1\26"+
    "\30\21\1\u034c\45\21\1\26\1\21\1\24\1\21\1\26"+
    "\36\21\1\u034d\37\21\1\26\1\21\1\24\1\21\1\26"+
    "\33\21\1\u034e\42\21\1\26\1\21\1\24\1\21\1\26"+
    "\22\21\1\u034f\50\21\3\u032c\1\u0340\1\21\1\u0350\1\21"+
    "\1\26\76\21\1\26\1\21\1\24\1\21\1\26\31\21"+
    "\1\u0351\44\21\1\26\1\21\1\24\1\21\1\26\26\21"+
    "\1\u0352\47\21\1\26\1\21\1\24\1\21\1\26\30\21"+
    "\1\u0353\45\21\1\26\1\21\1\24\1\21\1\26\30\21"+
    "\1\u0354\41\21\6\26\1\54\20\26\1\u0355\61\26\1\54"+
    "\36\26\1\u0356\43\26\1\54\31\26\1\u0357\50\26\1\54"+
    "\27\26\1\u0358\52\26\1\54\24\26\1\u0359\50\26\4\u033a"+
    "\1\26\1\u034a\102\26\1\54\16\26\1\u035a\63\26\1\54"+
    "\32\26\1\u035b\47\26\1\54\40\26\1\u035c\41\26\1\54"+
    "\35\26\1\u035d\44\26\1\54\24\26\1\u035e\50\26\4\u0340"+
    "\1\26\1\u0350\102\26\1\54\33\26\1\u035f\46\26\1\54"+
    "\30\26\1\u0360\51\26\1\54\32\26\1\u0361\47\26\1\54"+
    "\32\26\1\u0362\41\26\4\21\1\26\1\21\1\24\1\21"+
    "\1\26\27\21\1\u0363\46\21\1\26\1\21\1\24\1\21"+
    "\1\26\36\21\1\u0364\37\21\1\26\1\21\1\24\1\21"+
    "\1\26\16\21\1\u0365\57\21\1\26\1\21\1\24\1\21"+
    "\1\26\12\21\1\u0366\63\21\1\26\1\21\1\24\1\21"+
    "\1\26\30\21\1\u0367\45\21\1\26\1\21\1\24\1\21"+
    "\1\26\22\21\1\u0368\53\21\1\26\1\21\1\24\1\21"+
    "\1\26\27\21\1\u0369\46\21\1\26\1\21\1\24\1\21"+
    "\1\26\25\21\1\u036a\50\21\1\26\1\21\1\24\1\21"+
    "\1\26\22\21\1\u036b\53\21\1\26\1\21\1\24\1\21"+
    "\1\26\30\21\1\u036c\45\21\1\26\1\21\1\24\1\21"+
    "\1\26\30\21\1\u036d\45\21\1\26\1\21\1\24\1\21"+
    "\1\26\36\21\1\u036e\34\21\3\u0353\1\u0361\1\21\1\u036f"+
    "\1\21\1\26\76\21\1\26\1\21\1\24\1\21\1\26"+
    "\27\21\1\u0370\42\21\6\26\1\54\31\26\1\u0371\50\26"+
    "\1\54\40\26\1\u0372\41\26\1\54\20\26\1\u0373\61\26"+
    "\1\54\14\26\1\u0374\65\26\1\54\32\26\1\u0375\47\26"+
    "\1\54\24\26\1\u0376\55\26\1\54\31\26\1\u0377\50\26"+
    "\1\54\27\26\1\u0378\52\26\1\54\24\26\1\u0379\55\26"+
    "\1\54\32\26\1\u037a\47\26\1\54\32\26\1\u037b\47\26"+
    "\1\54\40\26\1\u037c\34\26\4\u0361\1\26\1\u036f\102\26"+
    "\1\54\31\26\1\u037d\42\26\4\21\1\26\1\21\1\24"+
    "\1\21\1\26\35\21\1\u037e\40\21\1\26\1\21\1\24"+
    "\1\21\1\26\12\21\1\u037f\63\21\1\26\1\21\1\24"+
    "\1\21\1\26\27\21\1\u0380\46\21\1\26\1\21\1\24"+
    "\1\21\1\26\33\21\1\u0381\37\21\3\u0367\1\u0375\1\21"+
    "\1\u0382\1\21\1\26\76\21\1\26\1\21\1\24\1\21"+
    "\1\26\30\21\1\u0383\45\21\1\26\1\21\1\24\1\21"+
    "\1\26\16\21\1\u0384\57\21\1\26\1\21\1\24\1\21"+
    "\1\26\12\21\1\u0385\63\21\1\26\1\21\1\24\1\21"+
    "\1\26\30\21\1\u0386\42\21\3\u036c\1\u037a\1\21\1\u0387"+
    "\1\21\1\26\76\21\1\26\1\21\1\24\1\21\1\26"+
    "\27\21\1\u0388\46\21\1\26\1\21\1\24\1\21\1\26"+
    "\25\21\1\u0389\45\21\3\u0370\1\u037d\1\21\1\u038a\1\21"+
    "\1\26\72\21\6\26\1\54\37\26\1\u038b\42\26\1\54"+
    "\14\26\1\u038c\65\26\1\54\31\26\1\u038d\50\26\1\54"+
    "\35\26\1\u038e\37\26\4\u0375\1\26\1\u0382\102\26\1\54"+
    "\32\26\1\u038f\47\26\1\54\20\26\1\u0390\61\26\1\54"+
    "\14\26\1\u0391\65\26\1\54\32\26\1\u0392\42\26\4\u037a"+
    "\1\26\1\u0387\102\26\1\54\31\26\1\u0393\50\26\1\54"+
    "\27\26\1\u0394\45\26\4\u037d\1\26\1\u038a\74\26\4\21"+
    "\1\26\1\21\1\24\1\21\1\26\16\21\1\u0395\57\21"+
    "\1\26\1\21\1\24\1\21\1\26\33\21\1\u0396\42\21"+
    "\1\26\1\21\1\24\1\21\1\26\35\21\1\u0397\40\21"+
    "\1\26\1\21\1\24\1\21\1\26\22\21\1\u0398\53\21"+
    "\1\26\1\21\1\24\1\21\1\26\27\21\1\u0399\46\21"+
    "\1\26\1\21\1\24\1\21\1\26\27\21\1\u039a\46\21"+
    "\1\26\1\21\1\24\1\21\1\26\33\21\1\u039b\37\21"+
    "\3\u0386\1\u0392\1\21\1\u039c\1\21\1\26\76\21\1\26"+
    "\1\21\1\24\1\21\1\26\16\21\1\u039d\57\21\1\26"+
    "\1\21\1\24\1\21\1\26\12\21\1\u039e\57\21\6\26"+
    "\1\54\20\26\1\u039f\61\26\1\54\35\26\1\u03a0\44\26"+
    "\1\54\37\26\1\u03a1\42\26\1\54\24\26\1\u03a2\55\26"+
    "\1\54\31\26\1\u03a3\50\26\1\54\31\26\1\u03a4\50\26"+
    "\1\54\35\26\1\u03a5\37\26\4\u0392\1\26\1\u039c\102\26"+
    "\1\54\20\26\1\u03a6\61\26\1\54\14\26\1\u03a7\57\26"+
    "\1\21\3\u0395\1\u039f\1\21\1\u03a8\1\21\1\26\76\21"+
    "\1\26\1\21\1\24\1\21\1\26\22\21\1\u03a9\53\21"+
    "\1\26\1\21\1\24\1\21\1\26\16\21\1\u03aa\57\21"+
    "\1\26\1\21\1\24\1\21\1\26\30\21\1\u03ab\42\21"+
    "\3\u0399\1\u03a3\1\21\1\u03ac\1\21\1\26\76\21\1\26"+
    "\1\21\1\24\1\21\1\26\35\21\1\u03ad\40\21\1\26"+
    "\1\21\1\24\1\21\1\26\22\21\1\u03ae\53\21\1\26"+
    "\1\21\1\24\1\21\1\26\27\21\1\u03af\46\21\1\26"+
    "\1\21\1\24\1\21\1\26\33\21\1\u03b0\36\21\1\26"+
    "\4\u039f\1\26\1\u03a8\102\26\1\54\24\26\1\u03b1\55\26"+
    "\1\54\20\26\1\u03b2\61\26\1\54\32\26\1\u03b3\42\26"+
    "\4\u03a3\1\26\1\u03ac\102\26\1\54\37\26\1\u03b4\42\26"+
    "\1\54\24\26\1\u03b5\55\26\1\54\31\26\1\u03b6\50\26"+
    "\1\54\35\26\1\u03b7\36\26\4\21\1\26\1\21\1\24"+
    "\1\21\1\26\30\21\1\u03b8\42\21\3\u03aa\1\u03b2\1\21"+
    "\1\u03b9\1\21\1\26\73\21\3\u03ab\1\u03b3\1\21\1\u03ba"+
    "\1\21\1\26\76\21\1\26\1\21\1\24\1\21\1\26"+
    "\16\21\1\u03bb\57\21\1\26\1\21\1\24\1\21\1\26"+
    "\30\21\1\u03bc\45\21\1\26\1\21\1\24\1\21\1\26"+
    "\35\21\1\u03bd\40\21\1\26\1\21\1\24\1\21\1\26"+
    "\22\21\1\u03be\47\21\6\26\1\54\32\26\1\u03bf\42\26"+
    "\4\u03b2\1\26\1\u03b9\75\26\4\u03b3\1\26\1\u03ba\102\26"+
    "\1\54\20\26\1\u03c0\61\26\1\54\32\26\1\u03c1\47\26"+
    "\1\54\37\26\1\u03c2\42\26\1\54\24\26\1\u03c3\47\26"+
    "\1\21\3\u03b8\1\u03bf\1\21\1\u03c4\1\21\1\26\73\21"+
    "\3\u03bb\1\u03c0\1\21\1\u03c5\1\21\1\26\73\21\3\u03bc"+
    "\1\u03c1\1\21\1\u03c6\1\21\1\26\76\21\1\26\1\21"+
    "\1\24\1\21\1\26\16\21\1\u03c7\57\21\1\26\1\21"+
    "\1\24\1\21\1\26\30\21\1\u03c8\41\21\1\26\4\u03bf"+
    "\1\26\1\u03c4\75\26\4\u03c0\1\26\1\u03c5\75\26\4\u03c1"+
    "\1\26\1\u03c6\102\26\1\54\20\26\1\u03c9\61\26\1\54"+
    "\32\26\1\u03ca\41\26\1\21\3\u03c7\1\u03c9\1\21\1\u03cb"+
    "\1\21\1\26\73\21\3\u03c8\1\u03ca\1\21\1\u03cc\1\21"+
    "\1\26\72\21\1\26\4\u03c9\1\26\1\u03cb\75\26\4\u03ca"+
    "\1\26\1\u03cc\74\26";

  private static int [] zzUnpackTrans() {
    int [] result = new int[60702];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** Error code for "Unknown internal scanner error". */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  /** Error code for "could not match input". */
  private static final int ZZ_NO_MATCH = 1;
  /** Error code for "pushback value was too large". */
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /**
   * Error messages for {@link #ZZ_UNKNOWN_ERROR}, {@link #ZZ_NO_MATCH}, and
   * {@link #ZZ_PUSHBACK_2BIG} respectively.
   */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state {@code aState}
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\2\11\1\1\1\11\1\1\6\11\2\1\2\11"+
    "\3\0\1\11\27\0\1\11\22\0\1\11\132\0\1\11"+
    "\136\0\1\11\66\0\1\11\23\0\1\11\57\0\1\11"+
    "\3\0\1\11\1\0\1\11\6\0\1\11\14\0\1\11"+
    "\4\0\1\11\44\0\1\11\12\0\2\11\6\0\1\11"+
    "\10\0\1\11\52\0\1\11\3\0\1\11\17\0\1\11"+
    "\34\0\1\11\4\0\2\11\15\0\1\11\1\0\1\11"+
    "\52\0\1\11\7\0\1\11\36\0\2\11\10\0\2\11"+
    "\44\0\1\11\24\0\2\1\41\0\1\11\37\0\1\11"+
    "\6\0\1\11\7\0\1\11\2\0\3\11\25\0\1\11"+
    "\5\0\1\11\36\0\1\11\22\0\1\11\4\0\1\11"+
    "\2\0\1\11\21\0\1\11\13\0\1\11\3\0\1\11"+
    "\14\0\2\11\11\0\3\11\4\0\2\11";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[972];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** Input device. */
  private java.io.Reader zzReader;

  /** Current state of the DFA. */
  private int zzState;

  /** Current lexical state. */
  private int zzLexicalState = YYINITIAL;

  /**
   * This buffer contains the current text to be matched and is the source of the {@link #yytext()}
   * string.
   */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** Text position at the last accepting state. */
  private int zzMarkedPos;

  /** Current text position in the buffer. */
  private int zzCurrentPos;

  /** Marks the beginning of the {@link #yytext()} string in the buffer. */
  private int zzStartRead;

  /** Marks the last character in the buffer, that has been read from input. */
  private int zzEndRead;

  /**
   * Whether the scanner is at the end of file.
   * @see #yyatEOF
   */
  private boolean zzAtEOF;

  /**
   * The number of occupied positions in {@link #zzBuffer} beyond {@link #zzEndRead}.
   *
   * <p>When a lead/high surrogate has been read from the input stream into the final
   * {@link #zzBuffer} position, this will have a value of 1; otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /** Number of newlines encountered up to the start of the matched text. */
  private int yyline;

  /** Number of characters from the last newline up to the start of the matched text. */
  private int yycolumn;

  /** Number of characters up to the start of the matched text. */
  @SuppressWarnings("unused")
  private long yychar;

  /** Whether the scanner is currently at the beginning of a line. */
  @SuppressWarnings("unused")
  private boolean zzAtBOL = true;

  /** Whether the user-EOF-code has already been executed. */
  private boolean zzEOFDone;

  /* user code: */
    private List<ErrorAnalisis> errores = new ArrayList();
    private StringBuffer string = new StringBuffer();

    public List<ErrorAnalisis> getErrores(){
        return this.errores;
    }

    private Symbol symbol(int type){
        return new Symbol(type, new Token(yyline, yycolumn, yytext()));
    }
    
    private Symbol symbol(int type, String lexema){
        return new Symbol(type, new Token(yyline, yycolumn, lexema);
    }

    private void addLexicError(){
        String descripcion = "El simbolo no pertenece al lenguaje";
        errores.add(new ErrorAnalisis(yytext(), yyline+1, yycolumn+1, TipoError.LEXICO, descripcion));
    }



  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public Lexer(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Translates raw input code points to DFA table row
   */
  private static int zzCMap(int input) {
    int offset = input & 255;
    return offset == input ? ZZ_CMAP_BLOCKS[offset] : ZZ_CMAP_BLOCKS[ZZ_CMAP_TOP[input >> 8] | offset];
  }

  /**
   * Refills the input buffer.
   *
   * @return {@code false} iff there was new input.
   * @exception java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead - zzStartRead);

      /* translate stored positions */
      zzEndRead -= zzStartRead;
      zzCurrentPos -= zzStartRead;
      zzMarkedPos -= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length * 2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException(
          "Reader returned 0 characters. See JFlex examples/zero-reader for a workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
        if (numRead == requested) { // We requested too few chars to encode a full Unicode character
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        } else {                    // There is room in the buffer for at least one more char
          int c = zzReader.read();  // Expecting to read a paired low surrogate char
          if (c == -1) {
            return true;
          } else {
            zzBuffer[zzEndRead++] = (char)c;
          }
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }


  /**
   * Closes the input reader.
   *
   * @throws java.io.IOException if the reader could not be closed.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true; // indicate end of file
    zzEndRead = zzStartRead; // invalidate buffer

    if (zzReader != null) {
      zzReader.close();
    }
  }


  /**
   * Resets the scanner to read from a new input stream.
   *
   * <p>Does not close the old reader.
   *
   * <p>All internal variables are reset, the old input stream <b>cannot</b> be reused (internal
   * buffer is discarded and lost). Lexical state is set to {@code ZZ_INITIAL}.
   *
   * <p>Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader The new input stream.
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzEOFDone = false;
    yyResetPosition();
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE) {
      zzBuffer = new char[ZZ_BUFFERSIZE];
    }
  }

  /**
   * Resets the input position.
   */
  private final void yyResetPosition() {
      zzAtBOL  = true;
      zzAtEOF  = false;
      zzCurrentPos = 0;
      zzMarkedPos = 0;
      zzStartRead = 0;
      zzEndRead = 0;
      zzFinalHighSurrogate = 0;
      yyline = 0;
      yycolumn = 0;
      yychar = 0L;
  }


  /**
   * Returns whether the scanner has reached the end of the reader it reads from.
   *
   * @return whether the scanner has reached EOF.
   */
  public final boolean yyatEOF() {
    return zzAtEOF;
  }


  /**
   * Returns the current lexical state.
   *
   * @return the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state.
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   *
   * @return the matched text.
   */
  public final String yytext() {
    return new String(zzBuffer, zzStartRead, zzMarkedPos-zzStartRead);
  }


  /**
   * Returns the character at the given position from the matched text.
   *
   * <p>It is equivalent to {@code yytext().charAt(pos)}, but faster.
   *
   * @param position the position of the character to fetch. A value from 0 to {@code yylength()-1}.
   *
   * @return the character at {@code position}.
   */
  public final char yycharat(int position) {
    return zzBuffer[zzStartRead + position];
  }


  /**
   * How many characters were matched.
   *
   * @return the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occurred while scanning.
   *
   * <p>In a well-formed scanner (no or only correct usage of {@code yypushback(int)} and a
   * match-all fallback rule) this method will only be called with things that
   * "Can't Possibly Happen".
   *
   * <p>If this method is called, something is seriously wrong (e.g. a JFlex bug producing a faulty
   * scanner etc.).
   *
   * <p>Usual syntax/scanner level error handling should be done in error fallback rules.
   *
   * @param errorCode the code of the error message to display.
   */
  private static void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    } catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * <p>They will be read again by then next call of the scanning method.
   *
   * @param number the number of characters to be read again. This number must not be greater than
   *     {@link #yylength()}.
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
    
  yyclose();    }
  }




  /**
   * Resumes scanning until the next regular expression is matched, the end of input is encountered
   * or an I/O-Error occurs.
   *
   * @return the next token.
   * @exception java.io.IOException if any I/O-Error occurs.
   */
  @Override  public java_cup.runtime.Symbol next_token() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char[] zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is
        // (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof)
            zzPeek = false;
          else
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMap(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
            zzDoEOF();
          {     return new Symbol(EOF, new Token(yyline, yycolumn, "Fin de linea"));
 }
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1:
            { addLexicError();
            }
            // fall through
          case 70: break;
          case 2:
            { /*Ignorar*/
            }
            // fall through
          case 71: break;
          case 3:
            { return symbol(EXCLAMATION_MARK);
            }
            // fall through
          case 72: break;
          case 4:
            { return symbol(COMMA);
            }
            // fall through
          case 73: break;
          case 5:
            { return symbol(COLON);
            }
            // fall through
          case 74: break;
          case 6:
            { return symbol(LESS_THAN);
            }
            // fall through
          case 75: break;
          case 7:
            { return symbol(GREATER_THAN);
            }
            // fall through
          case 76: break;
          case 8:
            { return symbol(OPEN_BRACKET);
            }
            // fall through
          case 77: break;
          case 9:
            { return symbol(CLOSE_BRACKET);
            }
            // fall through
          case 78: break;
          case 10:
            { return symbol(OPEN_BRACE);
            }
            // fall through
          case 79: break;
          case 11:
            { return symbol(CLOSE_BRACE);
            }
            // fall through
          case 80: break;
          case 12:
            { return symbol(VALUE);
            }
            // fall through
          case 81: break;
          case 13:
            { return symbol(LITERAL);
            }
            // fall through
          case 82: break;
          case 14:
            { return symbol(ID);
            }
            // fall through
          case 83: break;
          case 15:
            { return symbol(PARAM_ID);
            }
            // fall through
          case 84: break;
          case 16:
            { return symbol(PARAM_URL);
            }
            // fall through
          case 85: break;
          case 17:
            { return symbol(DARK);
            }
            // fall through
          case 86: break;
          case 18:
            { return symbol(PARAM_TEMA);
            }
            // fall through
          case 87: break;
          case 19:
            { return symbol(CLASS_BOTON);
            }
            // fall through
          case 88: break;
          case 20:
            { return symbol(PARAM_CLASE);
            }
            // fall through
          case 89: break;
          case 21:
            { return symbol(CLASS_COMBO);
            }
            // fall through
          case 90: break;
          case 22:
            { return symbol(PARAM_FILAS);
            }
            // fall through
          case 91: break;
          case 23:
            { return symbol(CLASS_RADIO);
            }
            // fall through
          case 92: break;
          case 24:
            { return symbol(WHITE)
            }
            // fall through
          case 93: break;
          case 25:
            { return symbol(CENTRO);
            }
            // fall through
          case 94: break;
          case 26:
            { return symbol(CLASS_IMAGEN);
            }
            // fall through
          case 95: break;
          case 27:
            { return symbol(PARAM_INDICE);
            }
            // fall through
          case 96: break;
          case 28:
            { return symbol(PARAM_NOMBRE_FORM);
            }
            // fall through
          case 97: break;
          case 29:
            { return symbol(PARAM_TITULO_FORM);
            }
            // fall through
          case 98: break;
          case 30:
            { return symbol(DERECHA);
            }
            // fall through
          case 99: break;
          case 31:
            { return symbol(CLASS_FICHERO);
            }
            // fall through
          case 100: break;
          case 32:
            { return symbol(PARAM_USUARIO);
            }
            // fall through
          case 101: break;
          case 33:
            { return symbol(FECHA);
            }
            // fall through
          case 102: break;
          case 34:
            { return symbol(CLASS_CHECKBOX);
            }
            // fall through
          case 103: break;
          case 35:
            { return symbol(PARAM_COLUMNAS);
            }
            // fall through
          case 104: break;
          case 36:
            { return symbol(PARAM_OPCIONES);
            }
            // fall through
          case 105: break;
          case 37:
            { return symbol(PARAM_PASSWORD);
            }
            // fall through
          case 106: break;
          case 38:
            { return symbol(IZQUIERDA);
            }
            // fall through
          case 107: break;
          case 39:
            { return symbol(PARAM_REQUERIDO);
            }
            // fall through
          case 108: break;
          case 40:
            { return symbol(PARAM_ALINEACION);
            }
            // fall through
          case 109: break;
          case 41:
            { return symbol(CLASS_AREA_TEXTO);
            }
            // fall through
          case 110: break;
          case 42:
            { return symbol(PARAM_FORMULARIO);
            }
            // fall through
          case 111: break;
          case 43:
            { return symbol(JUSTIFICAR);
            }
            // fall through
          case 112: break;
          case 44:
            { return symbol(CLASS_CAMPO_TEXTO);
            }
            // fall through
          case 113: break;
          case 45:
            { return symbol(END_REQUEST);
            }
            // fall through
          case 114: break;
          case 46:
            { return symbol(START_REQUEST);
            }
            // fall through
          case 115: break;
          case 47:
            { return symbol(PARAM_NOMBRE_CAMPO);
            }
            // fall through
          case 116: break;
          case 48:
            { return symbol(CREATE_USER);
            }
            // fall through
          case 117: break;
          case 49:
            { return symbol(LOGIN);
            }
            // fall through
          case 118: break;
          case 50:
            { return symbol(PARAM_TEXTO_VISIBLE);
            }
            // fall through
          case 119: break;
          case 51:
            { return symbol(PARAM_NEW_USER);
            }
            // fall through
          case 120: break;
          case 52:
            { return symbol(END_REQUESTS);
            }
            // fall through
          case 121: break;
          case 53:
            { return symbol(START_REQUESTS);
            }
            // fall through
          case 122: break;
          case 54:
            { return symbol(PARAM_FECHA_CREACION);
            }
            // fall through
          case 123: break;
          case 55:
            { return symbol(PARAM_NEW_PASSWORD);
            }
            // fall through
          case 124: break;
          case 56:
            { return symbol(PARAM_OLD_USER);
            }
            // fall through
          case 125: break;
          case 57:
            { return symbol(DELETE_USER);
            }
            // fall through
          case 126: break;
          case 58:
            { return symbol(NEW_FORM);
            }
            // fall through
          case 127: break;
          case 59:
            { return symbol(PARAM_USUARIO_CREACION);
            }
            // fall through
          case 128: break;
          case 60:
            { return symbol(MODIFY_USER);
            }
            // fall through
          case 129: break;
          case 61:
            { return symbol(NEW_COMPONENT);
            }
            // fall through
          case 130: break;
          case 62:
            { return symbol(PARAM_FECHA_MODIFICACION);
            }
            // fall through
          case 131: break;
          case 63:
            { return symbol(DELETE_COMPONENT);
            }
            // fall through
          case 132: break;
          case 64:
            { return symbol(DELETE_FORM);
            }
            // fall through
          case 133: break;
          case 65:
            { return symbol(USER_CREDENTIALS);
            }
            // fall through
          case 134: break;
          case 66:
            { return symbol(EDIT_COMPONENT);
            }
            // fall through
          case 135: break;
          case 67:
            { return symbol(MODIFY_FORM);
            }
            // fall through
          case 136: break;
          case 68:
            { return symbol(COMPONENT_PARAMS);
            }
            // fall through
          case 137: break;
          case 69:
            { return symbol(FORM_PARAMS);
            }
            // fall through
          case 138: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
