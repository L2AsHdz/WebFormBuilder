
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package com.l2ashdz.appcliente.analizadores.sintactico;

import com.l2ashdz.appcliente.model.Token;
import com.l2ashdz.appcliente.model.errores.ErrorAnalisis;
import com.l2ashdz.appcliente.model.errores.TipoError;
import com.l2ashdz.appcliente.model.solicitudes.Solicitud;
import com.l2ashdz.appcliente.model.solicitudes.TipoSolicitud;
import com.l2ashdz.appcliente.model.solicitudes.Parametro;
import java.util.ArrayList;
import java.util.List;
import java_cup.runtime.Symbol;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class RequestsParser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return RequestsSym.class;
}

  /** Default constructor. */
  @Deprecated
  public RequestsParser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public RequestsParser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public RequestsParser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\214\000\002\002\003\000\002\002\004\000\002\002" +
    "\003\000\002\003\007\000\002\004\004\000\002\004\004" +
    "\000\002\006\011\000\002\010\005\000\002\010\005\000" +
    "\002\010\005\000\002\010\005\000\002\010\005\000\002" +
    "\010\005\000\002\010\005\000\002\010\005\000\002\010" +
    "\005\000\002\010\005\000\002\011\007\000\002\012\007" +
    "\000\002\013\007\000\002\015\005\000\002\015\003\000" +
    "\002\021\005\000\002\041\005\000\002\041\003\000\002" +
    "\044\005\000\002\050\003\000\002\050\003\000\002\016" +
    "\005\000\002\016\003\000\002\022\005\000\002\042\005" +
    "\000\002\042\003\000\002\045\005\000\002\045\005\000" +
    "\002\051\003\000\002\051\003\000\002\017\005\000\002" +
    "\017\003\000\002\023\005\000\002\043\005\000\002\043" +
    "\003\000\002\046\005\000\002\046\005\000\002\052\003" +
    "\000\002\052\003\000\002\052\003\000\002\020\005\000" +
    "\002\020\003\000\002\024\005\000\002\047\005\000\002" +
    "\025\005\000\002\025\003\000\002\030\005\000\002\053" +
    "\005\000\002\053\003\000\002\055\005\000\002\055\005" +
    "\000\002\055\005\000\002\055\005\000\002\055\005\000" +
    "\002\060\003\000\002\060\003\000\002\027\005\000\002" +
    "\027\003\000\002\032\005\000\002\057\005\000\002\026" +
    "\005\000\002\026\003\000\002\031\005\000\002\054\005" +
    "\000\002\054\003\000\002\056\005\000\002\056\005\000" +
    "\002\056\005\000\002\056\005\000\002\033\005\000\002" +
    "\033\003\000\002\036\005\000\002\062\005\000\002\062" +
    "\003\000\002\064\005\000\002\064\005\000\002\064\005" +
    "\000\002\064\005\000\002\064\005\000\002\064\005\000" +
    "\002\064\005\000\002\064\005\000\002\064\005\000\002" +
    "\064\005\000\002\067\003\000\002\067\003\000\002\034" +
    "\005\000\002\034\003\000\002\037\005\000\002\063\005" +
    "\000\002\063\003\000\002\065\005\000\002\065\005\000" +
    "\002\065\005\000\002\065\005\000\002\065\005\000\002" +
    "\065\005\000\002\065\005\000\002\065\005\000\002\065" +
    "\005\000\002\065\005\000\002\065\005\000\002\070\003" +
    "\000\002\070\003\000\002\035\005\000\002\035\003\000" +
    "\002\040\005\000\002\066\005\000\002\075\003\000\002" +
    "\076\003\000\002\077\003\000\002\100\003\000\002\101" +
    "\003\000\002\061\003\000\002\061\003\000\002\071\003" +
    "\000\002\071\003\000\002\071\003\000\002\071\003\000" +
    "\002\071\003\000\002\071\003\000\002\071\003\000\002" +
    "\071\003\000\002\072\003\000\002\072\003\000\002\072" +
    "\003\000\002\072\003\000\002\073\003\000\002\073\003" +
    "\000\002\074\003\000\002\014\004\000\002\007\006\000" +
    "\002\005\006" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0131\000\004\075\004\001\002\000\004\077\011\001" +
    "\002\000\004\002\uffff\001\002\000\004\002\001\001\002" +
    "\000\004\002\010\001\002\000\004\002\000\001\002\000" +
    "\006\004\012\005\013\001\002\000\004\100\027\001\002" +
    "\000\004\076\014\001\002\000\004\075\015\001\002\000" +
    "\004\077\026\001\002\000\004\075\020\001\002\000\004" +
    "\002\ufffe\001\002\000\004\077\023\001\002\000\004\002" +
    "\ufffd\001\002\000\004\002\ufffc\001\002\000\006\004\012" +
    "\007\024\001\002\000\004\076\025\001\002\000\004\002" +
    "\uff76\001\002\000\004\004\012\001\002\000\026\013\031" +
    "\014\041\015\036\016\037\026\042\027\032\030\035\040" +
    "\040\041\030\042\034\001\002\000\004\076\142\001\002" +
    "\000\004\076\112\001\002\000\004\076\044\001\002\000" +
    "\004\105\u0106\001\002\000\004\076\142\001\002\000\004" +
    "\076\044\001\002\000\004\076\112\001\002\000\004\076" +
    "\112\001\002\000\004\076\142\001\002\000\004\076\112" +
    "\001\002\000\004\076\044\001\002\000\004\102\052\001" +
    "\002\000\004\102\045\001\002\000\004\011\046\001\002" +
    "\000\004\100\047\001\002\000\004\104\050\001\002\000" +
    "\004\102\uffef\001\002\000\004\105\ufff6\001\002\000\016" +
    "\021\064\031\062\032\066\033\056\034\057\035\063\001" +
    "\002\000\006\101\054\105\uffcd\001\002\000\004\102\052" +
    "\001\002\000\004\105\uffce\001\002\000\004\100\uffc4\001" +
    "\002\000\004\100\106\001\002\000\006\101\104\103\uffca" +
    "\001\002\000\004\103\103\001\002\000\004\100\100\001" +
    "\002\000\004\100\uffc3\001\002\000\004\100\075\001\002" +
    "\000\004\100\072\001\002\000\004\100\067\001\002\000" +
    "\004\111\070\001\002\000\006\101\uff8b\103\uff8b\001\002" +
    "\000\006\101\uffc6\103\uffc6\001\002\000\004\106\074\001" +
    "\002\000\006\101\uffc9\103\uffc9\001\002\000\006\101\uff8e" +
    "\103\uff8e\001\002\000\004\110\077\001\002\000\006\101" +
    "\uffc7\103\uffc7\001\002\000\006\101\uff8c\103\uff8c\001\002" +
    "\000\004\107\101\001\002\000\006\101\uff8d\103\uff8d\001" +
    "\002\000\006\101\uffc8\103\uffc8\001\002\000\006\101\uffcc" +
    "\105\uffcc\001\002\000\016\021\064\031\062\032\066\033" +
    "\056\034\057\035\063\001\002\000\004\103\uffcb\001\002" +
    "\000\006\036\111\037\107\001\002\000\006\101\uff88\103" +
    "\uff88\001\002\000\006\101\uffc5\103\uffc5\001\002\000\006" +
    "\101\uff89\103\uff89\001\002\000\004\102\136\001\002\000" +
    "\004\102\116\001\002\000\004\105\ufff9\001\002\000\006" +
    "\101\134\105\uffe4\001\002\000\010\017\117\020\123\021" +
    "\120\001\002\000\004\100\uffde\001\002\000\004\100\132" +
    "\001\002\000\006\101\130\103\uffe1\001\002\000\004\103" +
    "\127\001\002\000\004\100\uffdd\001\002\000\004\100\125" +
    "\001\002\000\004\106\074\001\002\000\006\101\uffe0\103" +
    "\uffe0\001\002\000\006\101\uffe3\105\uffe3\001\002\000\010" +
    "\017\117\020\123\021\120\001\002\000\004\103\uffe2\001" +
    "\002\000\004\110\077\001\002\000\006\101\uffdf\103\uffdf" +
    "\001\002\000\004\102\116\001\002\000\004\105\uffe5\001" +
    "\002\000\004\010\137\001\002\000\004\100\140\001\002" +
    "\000\004\104\141\001\002\000\004\102\ufff0\001\002\000" +
    "\004\102\236\001\002\000\004\102\146\001\002\000\006" +
    "\101\234\105\uffb4\001\002\000\004\105\ufff3\001\002\000" +
    "\030\031\153\043\151\044\152\045\164\047\157\050\161" +
    "\051\160\052\162\053\155\054\147\055\156\001\002\000" +
    "\004\100\232\001\002\000\004\100\230\001\002\000\004" +
    "\100\uffa6\001\002\000\004\100\226\001\002\000\004\100" +
    "\224\001\002\000\006\101\222\103\uffb1\001\002\000\004" +
    "\100\217\001\002\000\004\100\uffa5\001\002\000\004\100" +
    "\215\001\002\000\004\100\211\001\002\000\004\100\203" +
    "\001\002\000\004\100\200\001\002\000\004\103\177\001" +
    "\002\000\004\100\165\001\002\000\022\056\171\057\170" +
    "\060\174\061\176\062\173\063\172\064\166\065\167\001" +
    "\002\000\006\101\uff81\103\uff81\001\002\000\006\101\uff80" +
    "\103\uff80\001\002\000\006\101\uff86\103\uff86\001\002\000" +
    "\006\101\uff87\103\uff87\001\002\000\006\101\uff82\103\uff82" +
    "\001\002\000\006\101\uff83\103\uff83\001\002\000\006\101" +
    "\uff85\103\uff85\001\002\000\006\101\uffad\103\uffad\001\002" +
    "\000\006\101\uff84\103\uff84\001\002\000\006\101\uffb3\105" +
    "\uffb3\001\002\000\004\074\201\001\002\000\006\101\uff79" +
    "\103\uff79\001\002\000\006\101\uffa9\103\uffa9\001\002\000" +
    "\012\066\207\067\206\070\204\071\210\001\002\000\006" +
    "\101\uff7d\103\uff7d\001\002\000\006\101\uffab\103\uffab\001" +
    "\002\000\006\101\uff7e\103\uff7e\001\002\000\006\101\uff7f" +
    "\103\uff7f\001\002\000\006\101\uff7c\103\uff7c\001\002\000" +
    "\006\072\212\073\214\001\002\000\006\101\uff7b\103\uff7b" +
    "\001\002\000\006\101\uffaa\103\uffaa\001\002\000\006\101" +
    "\uff7a\103\uff7a\001\002\000\004\111\070\001\002\000\006" +
    "\101\uffac\103\uffac\001\002\000\004\112\221\001\002\000" +
    "\006\101\uffa8\103\uffa8\001\002\000\006\101\uff8a\103\uff8a" +
    "\001\002\000\030\031\153\043\151\044\152\045\164\047" +
    "\157\050\161\051\160\052\162\053\155\054\147\055\156" +
    "\001\002\000\004\103\uffb2\001\002\000\004\107\101\001" +
    "\002\000\006\101\uffaf\103\uffaf\001\002\000\004\107\101" +
    "\001\002\000\006\101\uffae\103\uffae\001\002\000\004\106" +
    "\074\001\002\000\006\101\uffb0\103\uffb0\001\002\000\004" +
    "\112\221\001\002\000\006\101\uffa7\103\uffa7\001\002\000" +
    "\004\102\146\001\002\000\004\105\uffb5\001\002\000\004" +
    "\012\237\001\002\000\004\100\240\001\002\000\004\104" +
    "\241\001\002\000\004\102\uffee\001\002\000\004\102\245" +
    "\001\002\000\004\105\ufff8\001\002\000\006\101\264\105" +
    "\uffdb\001\002\000\012\022\251\023\253\024\246\025\252" +
    "\001\002\000\004\100\uffd4\001\002\000\006\101\262\103" +
    "\uffd8\001\002\000\004\103\261\001\002\000\004\100\257" +
    "\001\002\000\004\100\uffd3\001\002\000\004\100\uffd5\001" +
    "\002\000\004\100\255\001\002\000\004\106\074\001\002" +
    "\000\006\101\uffd7\103\uffd7\001\002\000\004\110\077\001" +
    "\002\000\006\101\uffd6\103\uffd6\001\002\000\006\101\uffda" +
    "\105\uffda\001\002\000\012\022\251\023\253\024\246\025" +
    "\252\001\002\000\004\103\uffd9\001\002\000\004\102\245" +
    "\001\002\000\004\105\uffdc\001\002\000\004\102\271\001" +
    "\002\000\006\101\277\105\uffd1\001\002\000\004\105\ufff7" +
    "\001\002\000\004\017\272\001\002\000\004\100\275\001" +
    "\002\000\004\103\274\001\002\000\006\101\uffd0\105\uffd0" +
    "\001\002\000\004\106\074\001\002\000\004\103\uffcf\001" +
    "\002\000\004\102\271\001\002\000\004\105\uffd2\001\002" +
    "\000\004\102\304\001\002\000\006\101\326\105\uffbd\001" +
    "\002\000\004\105\ufff5\001\002\000\012\031\307\032\311" +
    "\033\312\034\310\001\002\000\004\103\325\001\002\000" +
    "\006\101\323\103\uffba\001\002\000\004\100\321\001\002" +
    "\000\004\100\317\001\002\000\004\100\315\001\002\000" +
    "\004\100\313\001\002\000\004\106\074\001\002\000\006" +
    "\101\uffb7\103\uffb7\001\002\000\004\111\070\001\002\000" +
    "\006\101\uffb8\103\uffb8\001\002\000\006\036\111\037\107" +
    "\001\002\000\006\101\uffb6\103\uffb6\001\002\000\004\107" +
    "\101\001\002\000\006\101\uffb9\103\uffb9\001\002\000\012" +
    "\031\307\032\311\033\312\034\310\001\002\000\004\103" +
    "\uffbb\001\002\000\006\101\uffbc\105\uffbc\001\002\000\004" +
    "\102\304\001\002\000\004\105\uffbe\001\002\000\004\102" +
    "\333\001\002\000\006\101\u0104\105\uffa3\001\002\000\004" +
    "\105\ufff2\001\002\000\032\031\337\043\335\044\336\045" +
    "\352\046\346\047\344\050\350\051\347\052\351\053\341" +
    "\054\334\055\343\001\002\000\004\100\u0102\001\002\000" +
    "\004\100\uff94\001\002\000\004\100\u0100\001\002\000\004" +
    "\100\376\001\002\000\004\100\374\001\002\000\004\100" +
    "\372\001\002\000\004\103\371\001\002\000\004\100\uff93" +
    "\001\002\000\004\100\367\001\002\000\006\101\365\103" +
    "\uffa0\001\002\000\004\100\363\001\002\000\004\100\361" +
    "\001\002\000\004\100\357\001\002\000\004\100\355\001" +
    "\002\000\004\100\353\001\002\000\022\056\171\057\170" +
    "\060\174\061\176\062\173\063\172\064\166\065\167\001" +
    "\002\000\006\101\uff9c\103\uff9c\001\002\000\004\074\201" +
    "\001\002\000\006\101\uff98\103\uff98\001\002\000\012\066" +
    "\207\067\206\070\204\071\210\001\002\000\006\101\uff9a" +
    "\103\uff9a\001\002\000\006\072\212\073\214\001\002\000" +
    "\006\101\uff99\103\uff99\001\002\000\004\112\221\001\002" +
    "\000\006\101\uff95\103\uff95\001\002\000\032\031\337\043" +
    "\335\044\336\045\352\046\346\047\344\050\350\051\347" +
    "\052\351\053\341\054\334\055\343\001\002\000\004\103" +
    "\uffa1\001\002\000\004\111\070\001\002\000\006\101\uff9b" +
    "\103\uff9b\001\002\000\006\101\uffa2\105\uffa2\001\002\000" +
    "\004\112\221\001\002\000\006\101\uff97\103\uff97\001\002" +
    "\000\004\106\074\001\002\000\006\101\uff9f\103\uff9f\001" +
    "\002\000\004\107\101\001\002\000\006\101\uff9e\103\uff9e" +
    "\001\002\000\004\107\101\001\002\000\006\101\uff9d\103" +
    "\uff9d\001\002\000\004\112\221\001\002\000\006\101\uff96" +
    "\103\uff96\001\002\000\004\102\333\001\002\000\004\105" +
    "\uffa4\001\002\000\004\103\u010d\001\002\000\004\075\u0108" +
    "\001\002\000\004\006\u010a\001\002\000\006\002\ufffb\075" +
    "\ufffb\001\002\000\004\077\u010b\001\002\000\004\076\u010c" +
    "\001\002\000\006\002\uff77\075\uff77\001\002\000\004\075" +
    "\uff78\001\002\000\004\102\u0111\001\002\000\004\105\ufff4" +
    "\001\002\000\006\101\u0117\105\uffc1\001\002\000\004\031" +
    "\u0113\001\002\000\004\103\u0116\001\002\000\004\100\u0114" +
    "\001\002\000\004\107\101\001\002\000\004\103\uffbf\001" +
    "\002\000\006\101\uffc0\105\uffc0\001\002\000\004\102\u0111" +
    "\001\002\000\004\105\uffc2\001\002\000\004\102\u011c\001" +
    "\002\000\004\105\ufffa\001\002\000\006\101\u0127\105\uffec" +
    "\001\002\000\006\017\u011e\020\u0121\001\002\000\004\100" +
    "\u0125\001\002\000\004\100\uffe7\001\002\000\004\103\u0124" +
    "\001\002\000\006\101\u0122\103\uffe9\001\002\000\004\100" +
    "\uffe6\001\002\000\006\017\u011e\020\u0121\001\002\000\004" +
    "\103\uffea\001\002\000\006\101\uffeb\105\uffeb\001\002\000" +
    "\004\106\074\001\002\000\006\101\uffe8\103\uffe8\001\002" +
    "\000\004\102\u011c\001\002\000\004\105\uffed\001\002\000" +
    "\004\102\u012c\001\002\000\006\101\u0132\105\uff91\001\002" +
    "\000\004\105\ufff1\001\002\000\004\031\u012d\001\002\000" +
    "\004\100\u0130\001\002\000\004\103\u012f\001\002\000\006" +
    "\101\uff90\105\uff90\001\002\000\004\107\101\001\002\000" +
    "\004\103\uff8f\001\002\000\004\102\u012c\001\002\000\004" +
    "\105\uff92\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0131\000\010\002\006\003\004\006\005\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\004\016\006\015\001\001" +
    "\000\002\001\001\000\010\004\021\005\020\006\015\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\010\032\001\001" +
    "\000\004\013\u0128\001\001\000\004\011\u0118\001\001\000" +
    "\004\012\u010d\001\001\000\004\014\u0106\001\001\000\004" +
    "\013\327\001\001\000\004\012\300\001\001\000\004\011" +
    "\265\001\001\000\004\011\241\001\001\000\004\013\142" +
    "\001\001\000\004\011\112\001\001\000\004\012\042\001" +
    "\001\000\006\025\050\030\052\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\053\060\055\057" +
    "\060\064\001\001\000\002\001\001\000\006\025\054\030" +
    "\052\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\100\070\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\075\072\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\077\075\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\076\101\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\053\104\055\057\060\064\001\001\000\002\001\001" +
    "\000\004\061\107\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\016\113" +
    "\022\114\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\042\121\045\120\051\123\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\075\125\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\042\130\045" +
    "\120\051\123\001\001\000\002\001\001\000\004\077\132" +
    "\001\001\000\002\001\001\000\006\016\134\022\114\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\033\144\036\143\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\062\162\064\153\067\147\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\071\174\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\074" +
    "\201\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\072\204\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\073\212\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\100\215\001\001\000\002\001\001" +
    "\000\004\101\217\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\062\222\064\153\067\147\001\001\000\002" +
    "\001\001\000\004\076\224\001\001\000\002\001\001\000" +
    "\004\076\226\001\001\000\002\001\001\000\004\075\230" +
    "\001\001\000\002\001\001\000\004\101\232\001\001\000" +
    "\002\001\001\000\006\033\234\036\143\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\017\242\023\243\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\043\247\046" +
    "\246\052\253\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\075\255\001\001" +
    "\000\002\001\001\000\004\077\257\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\043\262\046\246\052\253" +
    "\001\001\000\002\001\001\000\006\017\264\023\243\001" +
    "\001\000\002\001\001\000\006\020\267\024\266\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\047\272\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\075\275\001\001\000\002\001\001\000\006\020" +
    "\277\024\266\001\001\000\002\001\001\000\006\026\302" +
    "\031\301\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\054\304\056\305\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\075\313\001\001\000\002" +
    "\001\001\000\004\100\315\001\001\000\002\001\001\000" +
    "\004\061\317\001\001\000\002\001\001\000\004\076\321" +
    "\001\001\000\002\001\001\000\006\054\323\056\305\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\026\326" +
    "\031\301\001\001\000\002\001\001\000\006\034\331\037" +
    "\330\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\063\341\065\344\070\337\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\071\353\001\001\000\002\001\001" +
    "\000\004\074\355\001\001\000\002\001\001\000\004\072" +
    "\357\001\001\000\002\001\001\000\004\073\361\001\001" +
    "\000\002\001\001\000\004\101\363\001\001\000\002\001" +
    "\001\000\010\063\365\065\344\070\337\001\001\000\002" +
    "\001\001\000\004\100\367\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\101\372\001\001\000\002\001\001" +
    "\000\004\075\374\001\001\000\002\001\001\000\004\076" +
    "\376\001\001\000\002\001\001\000\004\076\u0100\001\001" +
    "\000\002\001\001\000\004\101\u0102\001\001\000\002\001" +
    "\001\000\006\034\u0104\037\330\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\007\u0108\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\027\u010e\032" +
    "\u010f\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\057\u0111\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\076\u0114\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\027\u0117\032\u010f\001\001\000\002\001\001\000" +
    "\006\015\u0119\021\u011a\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\041\u011e\044\u011f\050\u011c\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\041\u0122\044\u011f\050" +
    "\u011c\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\075\u0125\001\001\000\002\001\001\000\006\015\u0127\021" +
    "\u011a\001\001\000\002\001\001\000\006\035\u012a\040\u0129" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\066" +
    "\u012d\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\076\u0130\001\001\000\002\001\001\000" +
    "\006\035\u0132\040\u0129\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$RequestsParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$RequestsParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$RequestsParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




    private List<ErrorAnalisis> errores = new ArrayList();
    private List<Solicitud> solicitudes = new ArrayList();
    private List<Parametro> parametros = new ArrayList();

    public List<ErrorAnalisis> getErrores() {
        return this.errores;
    }

    public List<Solicitud> getSolicitudes() {
        return this.solicitudes;
    }

    private void addParameter(List<Parametro> parametros, Parametro param) {
        boolean add = true;
        
        for (Parametro p : parametros) {
            if (p.getName().equalsIgnoreCase(param.getName())) {
                add = false;
            }
        }
        
        if (add) {
            parametros.add(param);
        } else {
            System.out.println("El parametro ya esta agregado");
        }
    }

    public void syntax_error(Symbol s) {
        Token t = (Token) s.value;
        StringBuilder descripcion = new StringBuilder("Se esperaba: ");
        expected_token_ids().forEach(x -> descripcion.append(symbl_name_from_id(x)).append(", "));
        errores.add(new ErrorAnalisis(t.getLexema(), t.getLinea(), t.getColumna(), TipoError.SINTACTICO, descripcion.toString()));
    }

    public void unrecovered_syntax_error(Symbol cur_token){
        Token t = (Token) cur_token.value;
        System.out.println("Error irrecuperable " + t.getLexema());
    }

    protected int error_sync_size() {
        return 1;
    }


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$RequestsParser$actions {
  private final RequestsParser parser;

  /** Constructor */
  CUP$RequestsParser$actions(RequestsParser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$RequestsParser$do_action_part00000000(
    int                        CUP$RequestsParser$act_num,
    java_cup.runtime.lr_parser CUP$RequestsParser$parser,
    java.util.Stack            CUP$RequestsParser$stack,
    int                        CUP$RequestsParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$RequestsParser$result;

      /* select the action based on the action number */
      switch (CUP$RequestsParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // inicio ::= startRequest 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= inicio EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-1)).value;
		RESULT = start_val;
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-1)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$RequestsParser$parser.done_parsing();
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // inicio ::= startRequests 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // startRequests ::= LESS_THAN EXCLAMATION_MARK START_REQUESTS GREATER_THAN requests 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("startRequests",1, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-4)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // requests ::= startRequest endRequests 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("requests",2, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-1)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // requests ::= startRequest requests 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("requests",2, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-1)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // startRequest ::= LESS_THAN EXCLAMATION_MARK START_REQUEST COLON requestType endContent endRequest 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("startRequest",4, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-6)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // requestType ::= LOGIN startContentUser bloquesLogin 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("requestType",6, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // requestType ::= CREATE_USER startContentUser bloquesCreateUser 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("requestType",6, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // requestType ::= MODIFY_USER startContentUser bloquesModifyUser 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("requestType",6, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // requestType ::= DELETE_USER startContentUser bloquesDeleteUser 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("requestType",6, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // requestType ::= NEW_FORM startContentForm bloquesNewForm 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("requestType",6, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // requestType ::= MODIFY_FORM startContentForm bloquesEditForm 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("requestType",6, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // requestType ::= DELETE_FORM startContentForm bloquesDeleteForm 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("requestType",6, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // requestType ::= NEW_COMPONENT startContentComponent bloquesNewComponent 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("requestType",6, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // requestType ::= EDIT_COMPONENT startContentComponent bloquesEditComponent 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("requestType",6, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // requestType ::= DELETE_COMPONENT startContentComponent bloquesDeleteComponent 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("requestType",6, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // startContentUser ::= GREATER_THAN OPEN_BRACE USER_CREDENTIALS COLON OPEN_BRACKET 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("startContentUser",7, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-4)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // startContentForm ::= GREATER_THAN OPEN_BRACE FORM_PARAMS COLON OPEN_BRACKET 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("startContentForm",8, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-4)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // startContentComponent ::= GREATER_THAN OPEN_BRACE COMPONENT_PARAMS COLON OPEN_BRACKET 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("startContentComponent",9, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-4)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // bloquesLogin ::= bloqueLogin COMMA bloquesLogin 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("bloquesLogin",11, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // bloquesLogin ::= bloqueLogin 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("bloquesLogin",11, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // bloqueLogin ::= OPEN_BRACE paramsLogin CLOSE_BRACE 
            {
              Object RESULT =null;
		
                        solicitudes.add(new Solicitud(TipoSolicitud.LOGIN, parametros));
                        parametros = new ArrayList();
                     
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("bloqueLogin",15, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // paramsLogin ::= paramLogin COMMA paramsLogin 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Parametro p = (Parametro)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		addParameter(parametros, p);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramsLogin",31, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // paramsLogin ::= paramLogin 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Parametro p = (Parametro)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		addParameter(parametros, p);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramsLogin",31, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // paramLogin ::= nameParamLogin COLON value 
            {
              Parametro RESULT =null;
		int nleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		String n = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int vright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(n, v);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramLogin",34, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // nameParamLogin ::= PARAM_USUARIO 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = p.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("nameParamLogin",38, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // nameParamLogin ::= PARAM_PASSWORD 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = p.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("nameParamLogin",38, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // bloquesCreateUser ::= bloqueCreateUser COMMA bloquesCreateUser 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("bloquesCreateUser",12, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // bloquesCreateUser ::= bloqueCreateUser 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("bloquesCreateUser",12, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // bloqueCreateUser ::= OPEN_BRACE paramsCreateUser CLOSE_BRACE 
            {
              Object RESULT =null;
		
                                solicitudes.add(new Solicitud(TipoSolicitud.CREATE_USER, parametros));
                                parametros = new ArrayList();
                          
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("bloqueCreateUser",16, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // paramsCreateUser ::= paramCreateUser COMMA paramsCreateUser 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Parametro p = (Parametro)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		addParameter(parametros, p);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramsCreateUser",32, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // paramsCreateUser ::= paramCreateUser 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Parametro p = (Parametro)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		addParameter(parametros, p);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramsCreateUser",32, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // paramCreateUser ::= nameParamCreateUser COLON value 
            {
              Parametro RESULT =null;
		int nleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		String n = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int vright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(n, v);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramCreateUser",35, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // paramCreateUser ::= PARAM_FECHA_CREACION COLON fecha 
            {
              Parametro RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int fleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int fright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String f = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(p.getLexema(), f);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramCreateUser",35, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // nameParamCreateUser ::= PARAM_USUARIO 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = p.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("nameParamCreateUser",39, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // nameParamCreateUser ::= PARAM_PASSWORD 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = p.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("nameParamCreateUser",39, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // bloquesModifyUser ::= bloqueModifyUser COMMA bloquesModifyUser 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("bloquesModifyUser",13, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // bloquesModifyUser ::= bloqueModifyUser 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("bloquesModifyUser",13, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // bloqueModifyUser ::= OPEN_BRACE paramsModifyUser CLOSE_BRACE 
            {
              Object RESULT =null;
		
                            solicitudes.add(new Solicitud(TipoSolicitud.MODIFY_USER, parametros));
                            parametros = new ArrayList();
                        
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("bloqueModifyUser",17, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // paramsModifyUser ::= paramModifyUser COMMA paramsModifyUser 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Parametro p = (Parametro)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		addParameter(parametros, p);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramsModifyUser",33, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // paramsModifyUser ::= paramModifyUser 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Parametro p = (Parametro)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		addParameter(parametros, p);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramsModifyUser",33, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // paramModifyUser ::= nameParamModifyUser COLON value 
            {
              Parametro RESULT =null;
		int nleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		String n = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int vright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(n, v);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramModifyUser",36, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // paramModifyUser ::= PARAM_FECHA_MODIFICACION COLON fecha 
            {
              Parametro RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int fleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int fright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String f = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(p.getLexema(), f);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramModifyUser",36, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // nameParamModifyUser ::= PARAM_OLD_USER 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = p.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("nameParamModifyUser",40, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // nameParamModifyUser ::= PARAM_NEW_USER 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = p.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("nameParamModifyUser",40, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // nameParamModifyUser ::= PARAM_NEW_PASSWORD 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = p.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("nameParamModifyUser",40, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // bloquesDeleteUser ::= bloqueDeleteUser COMMA bloquesDeleteUser 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("bloquesDeleteUser",14, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // bloquesDeleteUser ::= bloqueDeleteUser 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("bloquesDeleteUser",14, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // bloqueDeleteUser ::= OPEN_BRACE paramDeleteUser CLOSE_BRACE 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-1)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-1)).right;
		Parametro p = (Parametro)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-1)).value;
		
                            parametros.add(p);
                            solicitudes.add(new Solicitud(TipoSolicitud.DELETE_USER, parametros));
                            parametros = new ArrayList();
                        
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("bloqueDeleteUser",18, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // paramDeleteUser ::= PARAM_USUARIO COLON value 
            {
              Parametro RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int vright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		
                        RESULT = new Parametro(p.getLexema(), v);
                    
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramDeleteUser",37, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // bloquesNewForm ::= bloqueNewForm COMMA bloquesNewForm 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("bloquesNewForm",19, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // bloquesNewForm ::= bloqueNewForm 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("bloquesNewForm",19, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // bloqueNewForm ::= OPEN_BRACE paramsNewForm CLOSE_BRACE 
            {
              Object RESULT =null;
		
                        solicitudes.add(new Solicitud(TipoSolicitud.NEW_FORM, parametros));
                        parametros = new ArrayList();
                     
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("bloqueNewForm",22, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // paramsNewForm ::= paramNewForm COMMA paramsNewForm 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Parametro p = (Parametro)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		addParameter(parametros, p);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramsNewForm",41, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // paramsNewForm ::= paramNewForm 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Parametro p = (Parametro)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		addParameter(parametros, p);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramsNewForm",41, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // paramNewForm ::= nameParamNewForm COLON value 
            {
              Parametro RESULT =null;
		int nleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		String n = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int vright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(n, v);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramNewForm",43, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // paramNewForm ::= PARAM_ID COLON id 
            {
              Parametro RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int iright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(p.getLexema(), i);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramNewForm",43, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // paramNewForm ::= PARAM_FECHA_CREACION COLON fecha 
            {
              Parametro RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int fleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int fright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String f = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(p.getLexema(), f);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramNewForm",43, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // paramNewForm ::= PARAM_TITULO_FORM COLON literal 
            {
              Parametro RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String l = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(p.getLexema(), l);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramNewForm",43, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // paramNewForm ::= PARAM_TEMA COLON tema 
            {
              Parametro RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(p.getLexema(), t);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramNewForm",43, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // nameParamNewForm ::= PARAM_NOMBRE_FORM 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = p.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("nameParamNewForm",46, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // nameParamNewForm ::= PARAM_USUARIO_CREACION 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = p.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("nameParamNewForm",46, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // bloquesDeleteForm ::= bloqueDeleteForm COMMA bloquesDeleteForm 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("bloquesDeleteForm",21, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // bloquesDeleteForm ::= bloqueDeleteForm 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("bloquesDeleteForm",21, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // bloqueDeleteForm ::= OPEN_BRACE paramDeleteForm CLOSE_BRACE 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-1)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-1)).right;
		Parametro p = (Parametro)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-1)).value;
		
                            parametros.add(p);
                            solicitudes.add(new Solicitud(TipoSolicitud.DELETE_FORM, parametros));
                            parametros = new ArrayList();
                        
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("bloqueDeleteForm",24, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // paramDeleteForm ::= PARAM_ID COLON id 
            {
              Parametro RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int iright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(p.getLexema(), i);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramDeleteForm",45, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // bloquesEditForm ::= bloqueEditForm COMMA bloquesEditForm 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("bloquesEditForm",20, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // bloquesEditForm ::= bloqueEditForm 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("bloquesEditForm",20, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // bloqueEditForm ::= OPEN_BRACE paramsEditForm CLOSE_BRACE 
            {
              Object RESULT =null;
		
                    solicitudes.add(new Solicitud(TipoSolicitud.EDIT_FORM, parametros));
                    parametros = new ArrayList();
                 
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("bloqueEditForm",23, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // paramsEditForm ::= paramEditForm COMMA paramsEditForm 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Parametro p = (Parametro)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		addParameter(parametros, p);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramsEditForm",42, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // paramsEditForm ::= paramEditForm 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Parametro p = (Parametro)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		addParameter(parametros, p);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramsEditForm",42, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // paramEditForm ::= PARAM_ID COLON id 
            {
              Parametro RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int iright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(p.getLexema(), i);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramEditForm",44, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // paramEditForm ::= PARAM_TITULO_FORM COLON literal 
            {
              Parametro RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String l = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(p.getLexema(), l);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramEditForm",44, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // paramEditForm ::= PARAM_NOMBRE_FORM COLON value 
            {
              Parametro RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int vright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(p.getLexema(), v);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramEditForm",44, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // paramEditForm ::= PARAM_TEMA COLON tema 
            {
              Parametro RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(p.getLexema(), t);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramEditForm",44, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // bloquesNewComponent ::= bloqueNewComponent COMMA bloquesNewComponent 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("bloquesNewComponent",25, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // bloquesNewComponent ::= bloqueNewComponent 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("bloquesNewComponent",25, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // bloqueNewComponent ::= OPEN_BRACE paramsNewComponent CLOSE_BRACE 
            {
              Object RESULT =null;
		
                        solicitudes.add(new Solicitud(TipoSolicitud.NEW_COMPONENT, parametros));
                        parametros = new ArrayList();
                     
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("bloqueNewComponent",28, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // paramsNewComponent ::= paramNewComponent COMMA paramsNewComponent 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Parametro p = (Parametro)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		addParameter(parametros, p);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramsNewComponent",48, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // paramsNewComponent ::= paramNewComponent 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Parametro p = (Parametro)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		addParameter(parametros, p);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramsNewComponent",48, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // paramNewComponent ::= nameParamNewComponent COLON value 
            {
              Parametro RESULT =null;
		int nleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		String n = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int vright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(n, v);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramNewComponent",50, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // paramNewComponent ::= PARAM_ID COLON id 
            {
              Parametro RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int iright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(p.getLexema(), i);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramNewComponent",50, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // paramNewComponent ::= PARAM_FORMULARIO COLON id 
            {
              Parametro RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int iright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(p.getLexema(), i);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramNewComponent",50, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // paramNewComponent ::= PARAM_CLASE COLON clase 
            {
              Parametro RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int cright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String c = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(p.getLexema(), c);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramNewComponent",50, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // paramNewComponent ::= PARAM_TEXTO_VISIBLE COLON literal 
            {
              Parametro RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String l = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(p.getLexema(), l);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramNewComponent",50, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // paramNewComponent ::= PARAM_ALINEACION COLON alineacion 
            {
              Parametro RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(p.getLexema(), a);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramNewComponent",50, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // paramNewComponent ::= PARAM_REQUERIDO COLON required 
            {
              Parametro RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int rleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int rright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String r = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(p.getLexema(), r);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramNewComponent",50, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // paramNewComponent ::= PARAM_OPCIONES COLON opciones 
            {
              Parametro RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int oleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int oright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String o = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(p.getLexema(), o);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramNewComponent",50, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // paramNewComponent ::= PARAM_FILAS COLON entero 
            {
              Parametro RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(p.getLexema(), e);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramNewComponent",50, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // paramNewComponent ::= PARAM_COLUMNAS COLON entero 
            {
              Parametro RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(p.getLexema(), e);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramNewComponent",50, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // nameParamNewComponent ::= PARAM_NOMBRE_CAMPO 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = p.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("nameParamNewComponent",53, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // nameParamNewComponent ::= PARAM_URL 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = p.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("nameParamNewComponent",53, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // bloquesEditComponent ::= bloqueEditComponent COMMA bloquesEditComponent 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("bloquesEditComponent",26, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // bloquesEditComponent ::= bloqueEditComponent 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("bloquesEditComponent",26, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // bloqueEditComponent ::= OPEN_BRACE paramsEditComponent CLOSE_BRACE 
            {
              Object RESULT =null;
		
                        solicitudes.add(new Solicitud(TipoSolicitud.EDIT_COMPONENT, parametros));
                        parametros = new ArrayList();
                      
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("bloqueEditComponent",29, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // paramsEditComponent ::= paramEditComponent COMMA paramsEditComponent 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Parametro p = (Parametro)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		addParameter(parametros, p);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramsEditComponent",49, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // paramsEditComponent ::= paramEditComponent 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Parametro p = (Parametro)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		addParameter(parametros, p);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramsEditComponent",49, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // paramEditComponent ::= nameParamEditComponent COLON value 
            {
              Parametro RESULT =null;
		int nleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		String n = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int vright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(n, v);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramEditComponent",51, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // paramEditComponent ::= PARAM_ID COLON id 
            {
              Parametro RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int iright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(p.getLexema(), i);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramEditComponent",51, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // paramEditComponent ::= PARAM_FORMULARIO COLON id 
            {
              Parametro RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int iright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(p.getLexema(), i);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramEditComponent",51, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // paramEditComponent ::= PARAM_CLASE COLON clase 
            {
              Parametro RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int cright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String c = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(p.getLexema(), c);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramEditComponent",51, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // paramEditComponent ::= PARAM_TEXTO_VISIBLE COLON literal 
            {
              Parametro RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int lleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String l = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(p.getLexema(), l);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramEditComponent",51, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // paramEditComponent ::= PARAM_ALINEACION COLON alineacion 
            {
              Parametro RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(p.getLexema(), a);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramEditComponent",51, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // paramEditComponent ::= PARAM_REQUERIDO COLON required 
            {
              Parametro RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int rleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int rright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String r = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(p.getLexema(), r);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramEditComponent",51, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // paramEditComponent ::= PARAM_OPCIONES COLON opciones 
            {
              Parametro RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int oleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int oright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String o = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(p.getLexema(), o);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramEditComponent",51, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // paramEditComponent ::= PARAM_FILAS COLON entero 
            {
              Parametro RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(p.getLexema(), e);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramEditComponent",51, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // paramEditComponent ::= PARAM_COLUMNAS COLON entero 
            {
              Parametro RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(p.getLexema(), e);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramEditComponent",51, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // paramEditComponent ::= PARAM_INDICE COLON entero 
            {
              Parametro RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(p.getLexema(), e);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramEditComponent",51, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // nameParamEditComponent ::= PARAM_NOMBRE_CAMPO 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = p.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("nameParamEditComponent",54, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // nameParamEditComponent ::= PARAM_URL 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = p.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("nameParamEditComponent",54, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // bloquesDeleteComponent ::= bloqueDeleteComponent COMMA bloquesDeleteComponent 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("bloquesDeleteComponent",27, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // bloquesDeleteComponent ::= bloqueDeleteComponent 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("bloquesDeleteComponent",27, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // bloqueDeleteComponent ::= OPEN_BRACE paramDeleteComponent CLOSE_BRACE 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-1)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-1)).right;
		Parametro p = (Parametro)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-1)).value;
		
                            parametros.add(p);
                            solicitudes.add(new Solicitud(TipoSolicitud.DELETE_COMPONENT, parametros));
                            parametros = new ArrayList();
                        
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("bloqueDeleteComponent",30, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // paramDeleteComponent ::= PARAM_ID COLON id 
            {
              Parametro RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).right;
		Token p = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int iright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = new Parametro(p.getLexema(), i);
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("paramDeleteComponent",52, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-2)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // value ::= VALUE 
            {
              String RESULT =null;
		int vleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int vright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token v = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = v.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("value",59, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // id ::= ID 
            {
              String RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int iright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token i = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = i.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("id",60, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // fecha ::= FECHA 
            {
              String RESULT =null;
		int fleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int fright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token f = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = f.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("fecha",61, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // literal ::= LITERAL 
            {
              String RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token l = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = l.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("literal",62, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // entero ::= ENTERO 
            {
              String RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token e = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = e.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("entero",63, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // tema ::= DARK 
            {
              String RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token t = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = t.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("tema",47, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // tema ::= WHITE 
            {
              String RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token t = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = t.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("tema",47, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // clase ::= CLASS_CAMPO_TEXTO 
            {
              String RESULT =null;
		int cleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int cright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token c = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = c.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("clase",55, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // clase ::= CLASS_AREA_TEXTO 
            {
              String RESULT =null;
		int cleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int cright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token c = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = c.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("clase",55, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // clase ::= CLASS_CHECKBOX 
            {
              String RESULT =null;
		int cleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int cright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token c = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = c.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("clase",55, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // clase ::= CLASS_RADIO 
            {
              String RESULT =null;
		int cleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int cright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token c = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = c.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("clase",55, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // clase ::= CLASS_FICHERO 
            {
              String RESULT =null;
		int cleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int cright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token c = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = c.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("clase",55, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // clase ::= CLASS_IMAGEN 
            {
              String RESULT =null;
		int cleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int cright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token c = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = c.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("clase",55, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // clase ::= CLASS_COMBO 
            {
              String RESULT =null;
		int cleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int cright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token c = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = c.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("clase",55, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // clase ::= CLASS_BOTON 
            {
              String RESULT =null;
		int cleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int cright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token c = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = c.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("clase",55, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // alineacion ::= CENTRO 
            {
              String RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = a.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("alineacion",56, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // alineacion ::= IZQUIERDA 
            {
              String RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = a.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("alineacion",56, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // alineacion ::= DERECHA 
            {
              String RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = a.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("alineacion",56, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // alineacion ::= JUSTIFICAR 
            {
              String RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = a.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("alineacion",56, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // required ::= SI 
            {
              String RESULT =null;
		int rleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int rright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token r = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT =r.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("required",57, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // required ::= NO 
            {
              String RESULT =null;
		int rleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int rright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token r = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT =r.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("required",57, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // opciones ::= OPCIONES 
            {
              String RESULT =null;
		int oleft = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).left;
		int oright = ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()).right;
		Token o = (Token)((java_cup.runtime.Symbol) CUP$RequestsParser$stack.peek()).value;
		RESULT = o.getLexema();
              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("opciones",58, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // endContent ::= CLOSE_BRACKET CLOSE_BRACE 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("endContent",10, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-1)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // endRequest ::= LESS_THAN END_REQUEST EXCLAMATION_MARK GREATER_THAN 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("endRequest",5, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-3)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // endRequests ::= LESS_THAN EXCLAMATION_MARK END_REQUESTS GREATER_THAN 
            {
              Object RESULT =null;

              CUP$RequestsParser$result = parser.getSymbolFactory().newSymbol("endRequests",3, ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.elementAt(CUP$RequestsParser$top-3)), ((java_cup.runtime.Symbol)CUP$RequestsParser$stack.peek()), RESULT);
            }
          return CUP$RequestsParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$RequestsParser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$RequestsParser$do_action(
    int                        CUP$RequestsParser$act_num,
    java_cup.runtime.lr_parser CUP$RequestsParser$parser,
    java.util.Stack            CUP$RequestsParser$stack,
    int                        CUP$RequestsParser$top)
    throws java.lang.Exception
    {
              return CUP$RequestsParser$do_action_part00000000(
                               CUP$RequestsParser$act_num,
                               CUP$RequestsParser$parser,
                               CUP$RequestsParser$stack,
                               CUP$RequestsParser$top);
    }
}

}
