
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package analizadores.sintactico;

import java.util.ArrayList;
import java.util.List;
import model.Formulario;
import model.Token;
import model.Usuario;
import model.errores.ErrorAnalisis;
import model.errores.TipoError;
import java_cup.runtime.Symbol;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class StorageParser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return StorageSym.class;
}

  /** Default constructor. */
  @Deprecated
  public StorageParser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public StorageParser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public StorageParser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\031\000\002\002\003\000\002\002\004\000\002\002" +
    "\003\000\002\003\006\000\002\004\006\000\002\005\004" +
    "\000\002\007\005\000\002\007\003\000\002\010\005\000" +
    "\002\010\005\000\002\010\005\000\002\011\005\000\002" +
    "\011\003\000\002\012\005\000\002\012\005\000\002\012" +
    "\005\000\002\012\005\000\002\012\005\000\002\012\005" +
    "\000\002\013\003\000\002\017\003\000\002\014\003\000" +
    "\002\016\003\000\002\015\003\000\002\006\004" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\066\000\006\004\004\005\005\001\002\000\004\022" +
    "\013\001\002\000\004\022\013\001\002\000\004\002\001" +
    "\001\002\000\004\002\uffff\001\002\000\004\002\011\001" +
    "\002\000\004\002\000\001\002\000\016\010\016\011\017" +
    "\012\022\013\023\014\021\015\024\001\002\000\004\020" +
    "\014\001\002\000\022\006\ufffc\007\ufffc\010\ufffc\011\ufffc" +
    "\012\ufffc\013\ufffc\014\ufffc\015\ufffc\001\002\000\006\017" +
    "\050\021\ufff5\001\002\000\004\016\045\001\002\000\004" +
    "\016\042\001\002\000\004\021\037\001\002\000\004\016" +
    "\035\001\002\000\004\016\032\001\002\000\004\016\030" +
    "\001\002\000\004\016\025\001\002\000\004\027\027\001" +
    "\002\000\006\017\ufff3\021\ufff3\001\002\000\006\017\uffee" +
    "\021\uffee\001\002\000\004\027\027\001\002\000\006\017" +
    "\ufff4\021\ufff4\001\002\000\004\030\033\001\002\000\006" +
    "\017\uffeb\021\uffeb\001\002\000\006\017\ufff0\021\ufff0\001" +
    "\002\000\002\001\002\000\006\017\uffef\021\uffef\001\002" +
    "\000\004\023\041\001\002\000\004\002\ufffd\001\002\000" +
    "\004\002\uffe9\001\002\000\004\024\043\001\002\000\006" +
    "\017\uffed\021\uffed\001\002\000\006\017\ufff2\021\ufff2\001" +
    "\002\000\004\025\047\001\002\000\006\017\ufff1\021\ufff1" +
    "\001\002\000\006\017\uffec\021\uffec\001\002\000\016\010" +
    "\016\011\017\012\022\013\023\014\021\015\024\001\002" +
    "\000\004\021\ufff6\001\002\000\010\006\053\007\056\010" +
    "\054\001\002\000\004\016\067\001\002\000\004\016\065" +
    "\001\002\000\004\021\037\001\002\000\004\016\062\001" +
    "\002\000\006\017\060\021\ufffa\001\002\000\010\006\053" +
    "\007\056\010\054\001\002\000\004\021\ufffb\001\002\000" +
    "\004\027\027\001\002\000\006\017\ufff8\021\ufff8\001\002" +
    "\000\004\002\ufffe\001\002\000\004\025\047\001\002\000" +
    "\006\017\ufff7\021\ufff7\001\002\000\004\027\027\001\002" +
    "\000\006\017\ufff9\021\ufff9\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\066\000\010\002\007\003\005\004\006\001\001\000" +
    "\004\005\051\001\001\000\004\005\011\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\011\017\012\014\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\006\037\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\013\025\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\013\030\001\001\000\002\001\001\000\004\016" +
    "\033\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\020\035\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\017\043\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\014\045\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\011\050" +
    "\012\014\001\001\000\002\001\001\000\006\007\054\010" +
    "\056\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\006\063\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\007\060\010\056\001\001\000\002\001\001\000\004" +
    "\013\062\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\014\065\001\001\000\002\001\001\000\004\013\067" +
    "\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$StorageParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$StorageParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$StorageParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    
    private List<ErrorAnalisis> errores = new ArrayList();
    private Usuario user = new Usuario();
    private Formulario form = new Formulario();

    public List<ErrorAnalisis> getErrores() {
        return this.errores;
    }

    public Usuario getUsuario(){
        return this.user;
    }

    public Formulario getForm(){
        return this.form;
    }

    public void syntax_error(Symbol s) {
        Token t = (Token) s.value;
        StringBuilder descripcion = new StringBuilder("Se esperaba: ");
        expected_token_ids().forEach(x -> descripcion.append(symbl_name_from_id(x)).append(", "));
        errores.add(new ErrorAnalisis(t.getLexema(), t.getLinea(), t.getColumna(), TipoError.SINTACTICO, descripcion.toString()));
    }



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$StorageParser$actions {
  private final StorageParser parser;

  /** Constructor */
  CUP$StorageParser$actions(StorageParser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$StorageParser$do_action_part00000000(
    int                        CUP$StorageParser$act_num,
    java_cup.runtime.lr_parser CUP$StorageParser$parser,
    java.util.Stack            CUP$StorageParser$stack,
    int                        CUP$StorageParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$StorageParser$result;

      /* select the action based on the action number */
      switch (CUP$StorageParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // inicio ::= startUserStructure 
            {
              Object RESULT =null;

              CUP$StorageParser$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), RESULT);
            }
          return CUP$StorageParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= inicio EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$StorageParser$stack.elementAt(CUP$StorageParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$StorageParser$stack.elementAt(CUP$StorageParser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$StorageParser$stack.elementAt(CUP$StorageParser$top-1)).value;
		RESULT = start_val;
              CUP$StorageParser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$StorageParser$stack.elementAt(CUP$StorageParser$top-1)), ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$StorageParser$parser.done_parsing();
          return CUP$StorageParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // inicio ::= startFormStructure 
            {
              Object RESULT =null;

              CUP$StorageParser$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), RESULT);
            }
          return CUP$StorageParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // startUserStructure ::= INICIO_USER startStructure paramsUser endStructure 
            {
              Object RESULT =null;

              CUP$StorageParser$result = parser.getSymbolFactory().newSymbol("startUserStructure",1, ((java_cup.runtime.Symbol)CUP$StorageParser$stack.elementAt(CUP$StorageParser$top-3)), ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), RESULT);
            }
          return CUP$StorageParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // startFormStructure ::= INICIO_FORM startStructure paramsForm endStructure 
            {
              Object RESULT =null;

              CUP$StorageParser$result = parser.getSymbolFactory().newSymbol("startFormStructure",2, ((java_cup.runtime.Symbol)CUP$StorageParser$stack.elementAt(CUP$StorageParser$top-3)), ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), RESULT);
            }
          return CUP$StorageParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // startStructure ::= OPEN_ROUND_BRACKET OPEN_BRACE 
            {
              Object RESULT =null;

              CUP$StorageParser$result = parser.getSymbolFactory().newSymbol("startStructure",3, ((java_cup.runtime.Symbol)CUP$StorageParser$stack.elementAt(CUP$StorageParser$top-1)), ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), RESULT);
            }
          return CUP$StorageParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // paramsUser ::= paramUser COMMA paramsUser 
            {
              Object RESULT =null;

              CUP$StorageParser$result = parser.getSymbolFactory().newSymbol("paramsUser",5, ((java_cup.runtime.Symbol)CUP$StorageParser$stack.elementAt(CUP$StorageParser$top-2)), ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), RESULT);
            }
          return CUP$StorageParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // paramsUser ::= paramUser 
            {
              Object RESULT =null;

              CUP$StorageParser$result = parser.getSymbolFactory().newSymbol("paramsUser",5, ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), RESULT);
            }
          return CUP$StorageParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // paramUser ::= PARAM_USUARIO COLON value 
            {
              Object RESULT =null;
		int vleft = ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()).left;
		int vright = ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$StorageParser$stack.peek()).value;
		user.setNombre(v.replace("\"",""));
              CUP$StorageParser$result = parser.getSymbolFactory().newSymbol("paramUser",6, ((java_cup.runtime.Symbol)CUP$StorageParser$stack.elementAt(CUP$StorageParser$top-2)), ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), RESULT);
            }
          return CUP$StorageParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // paramUser ::= PARAM_PASSWORD COLON value 
            {
              Object RESULT =null;
		int vleft = ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()).left;
		int vright = ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$StorageParser$stack.peek()).value;
		user.setPassword(v.replace("\"",""));
              CUP$StorageParser$result = parser.getSymbolFactory().newSymbol("paramUser",6, ((java_cup.runtime.Symbol)CUP$StorageParser$stack.elementAt(CUP$StorageParser$top-2)), ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), RESULT);
            }
          return CUP$StorageParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // paramUser ::= PARAM_FECHA_CREACION COLON fecha 
            {
              Object RESULT =null;
		int fleft = ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()).left;
		int fright = ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()).right;
		String f = (String)((java_cup.runtime.Symbol) CUP$StorageParser$stack.peek()).value;
		user.setFechaCreacion(f.replace("\"",""));
              CUP$StorageParser$result = parser.getSymbolFactory().newSymbol("paramUser",6, ((java_cup.runtime.Symbol)CUP$StorageParser$stack.elementAt(CUP$StorageParser$top-2)), ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), RESULT);
            }
          return CUP$StorageParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // paramsForm ::= paramForm COMMA paramsForm 
            {
              Object RESULT =null;

              CUP$StorageParser$result = parser.getSymbolFactory().newSymbol("paramsForm",7, ((java_cup.runtime.Symbol)CUP$StorageParser$stack.elementAt(CUP$StorageParser$top-2)), ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), RESULT);
            }
          return CUP$StorageParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // paramsForm ::= paramForm 
            {
              Object RESULT =null;

              CUP$StorageParser$result = parser.getSymbolFactory().newSymbol("paramsForm",7, ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), RESULT);
            }
          return CUP$StorageParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // paramForm ::= PARAM_NOMBRE_FORM COLON value 
            {
              Object RESULT =null;
		int vleft = ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()).left;
		int vright = ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$StorageParser$stack.peek()).value;

              CUP$StorageParser$result = parser.getSymbolFactory().newSymbol("paramForm",8, ((java_cup.runtime.Symbol)CUP$StorageParser$stack.elementAt(CUP$StorageParser$top-2)), ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), RESULT);
            }
          return CUP$StorageParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // paramForm ::= PARAM_USUARIO_CREACION COLON value 
            {
              Object RESULT =null;
		int vleft = ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()).left;
		int vright = ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$StorageParser$stack.peek()).value;

              CUP$StorageParser$result = parser.getSymbolFactory().newSymbol("paramForm",8, ((java_cup.runtime.Symbol)CUP$StorageParser$stack.elementAt(CUP$StorageParser$top-2)), ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), RESULT);
            }
          return CUP$StorageParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // paramForm ::= PARAM_ID COLON id 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()).left;
		int iright = ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$StorageParser$stack.peek()).value;

              CUP$StorageParser$result = parser.getSymbolFactory().newSymbol("paramForm",8, ((java_cup.runtime.Symbol)CUP$StorageParser$stack.elementAt(CUP$StorageParser$top-2)), ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), RESULT);
            }
          return CUP$StorageParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // paramForm ::= PARAM_FECHA_CREACION COLON fecha 
            {
              Object RESULT =null;
		int fleft = ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()).left;
		int fright = ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()).right;
		String f = (String)((java_cup.runtime.Symbol) CUP$StorageParser$stack.peek()).value;

              CUP$StorageParser$result = parser.getSymbolFactory().newSymbol("paramForm",8, ((java_cup.runtime.Symbol)CUP$StorageParser$stack.elementAt(CUP$StorageParser$top-2)), ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), RESULT);
            }
          return CUP$StorageParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // paramForm ::= PARAM_TITULO_FORM COLON literal 
            {
              Object RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()).right;
		String l = (String)((java_cup.runtime.Symbol) CUP$StorageParser$stack.peek()).value;

              CUP$StorageParser$result = parser.getSymbolFactory().newSymbol("paramForm",8, ((java_cup.runtime.Symbol)CUP$StorageParser$stack.elementAt(CUP$StorageParser$top-2)), ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), RESULT);
            }
          return CUP$StorageParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // paramForm ::= PARAM_TEMA COLON tema 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$StorageParser$stack.peek()).value;

              CUP$StorageParser$result = parser.getSymbolFactory().newSymbol("paramForm",8, ((java_cup.runtime.Symbol)CUP$StorageParser$stack.elementAt(CUP$StorageParser$top-2)), ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), RESULT);
            }
          return CUP$StorageParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // value ::= VALUE 
            {
              String RESULT =null;
		int vleft = ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()).left;
		int vright = ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$StorageParser$stack.peek()).value;
		RESULT = v;
              CUP$StorageParser$result = parser.getSymbolFactory().newSymbol("value",9, ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), RESULT);
            }
          return CUP$StorageParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // id ::= ID 
            {
              String RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()).left;
		int iright = ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$StorageParser$stack.peek()).value;
		RESULT = i;
              CUP$StorageParser$result = parser.getSymbolFactory().newSymbol("id",13, ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), RESULT);
            }
          return CUP$StorageParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // fecha ::= FECHA 
            {
              String RESULT =null;
		int fleft = ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()).left;
		int fright = ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()).right;
		String f = (String)((java_cup.runtime.Symbol) CUP$StorageParser$stack.peek()).value;
		RESULT = f;
              CUP$StorageParser$result = parser.getSymbolFactory().newSymbol("fecha",10, ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), RESULT);
            }
          return CUP$StorageParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // literal ::= LITERAL 
            {
              String RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()).left;
		int lright = ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()).right;
		String l = (String)((java_cup.runtime.Symbol) CUP$StorageParser$stack.peek()).value;
		RESULT = l;
              CUP$StorageParser$result = parser.getSymbolFactory().newSymbol("literal",12, ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), RESULT);
            }
          return CUP$StorageParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // entero ::= ENTERO 
            {
              String RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$StorageParser$stack.peek()).value;
		RESULT = e;
              CUP$StorageParser$result = parser.getSymbolFactory().newSymbol("entero",11, ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), RESULT);
            }
          return CUP$StorageParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // endStructure ::= CLOSE_BRACE CLOSE_ROUND_BRACKET 
            {
              Object RESULT =null;

              CUP$StorageParser$result = parser.getSymbolFactory().newSymbol("endStructure",4, ((java_cup.runtime.Symbol)CUP$StorageParser$stack.elementAt(CUP$StorageParser$top-1)), ((java_cup.runtime.Symbol)CUP$StorageParser$stack.peek()), RESULT);
            }
          return CUP$StorageParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$StorageParser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$StorageParser$do_action(
    int                        CUP$StorageParser$act_num,
    java_cup.runtime.lr_parser CUP$StorageParser$parser,
    java.util.Stack            CUP$StorageParser$stack,
    int                        CUP$StorageParser$top)
    throws java.lang.Exception
    {
              return CUP$StorageParser$do_action_part00000000(
                               CUP$StorageParser$act_num,
                               CUP$StorageParser$parser,
                               CUP$StorageParser$stack,
                               CUP$StorageParser$top);
    }
}

}
